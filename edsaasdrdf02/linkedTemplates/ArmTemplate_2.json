{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "edsaasdrdf02"
		},
		"ZIP_FUSION_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().ZipName"
		},
		"ZIP_FUSION_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@if(equals(dataset().InterfaceFolder,'-1'),concat('egsaasdrblob01/',dataset().PathFolder,'/',dataset().Department),concat('egsaasdrblob01/',dataset().PathFolder,'/',dataset().Department,'/',dataset().InterfaceFolder))"
		},
		"ZIP_ROSS_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@if(equals(dataset().ZipName,'-1'),'',dataset().ZipName)"
		},
		"ZIP_ROSS_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@if(equals(dataset().InterfaceFolder,'-1'),concat('egsaasdrblob01/',dataset().FolderPath,'/',dataset().Department),concat('egsaasdrblob01/',dataset().FolderPath,'/',dataset().Department,'/',dataset().InterfaceFolder))"
		},
		"ZIP_ROSS_FOR_SFTP_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@if(equals(dataset().ZipName,'-1'),'',dataset().ZipName)"
		},
		"ZIP_ROSS_FOR_SFTP_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@if(equals(dataset().InterfaceFolder,'-1'),concat('egsaasdrblob01/',dataset().FolderPath,'/',dataset().Department),concat('egsaasdrblob01/',dataset().FolderPath,'/',dataset().Department,'/',dataset().InterfaceFolder))"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ZIP_FUSION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "egsaasdrBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"InterfaceFolder": {
						"type": "string"
					},
					"ZipName": {
						"type": "string"
					},
					"PathFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate"
					},
					"fileName": {
						"value": "[parameters('ZIP_FUSION_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ZIP_FUSION_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZIP_ROSS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "egsaasdrBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"InterfaceFolder": {
						"type": "string"
					},
					"ZipName": {
						"type": "string",
						"defaultValue": "-1"
					},
					"FolderPath": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					},
					"fileName": {
						"value": "[parameters('ZIP_ROSS_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ZIP_ROSS_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZIP_ROSS_FOR_SFTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "egsaasdrBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"InterfaceFolder": {
						"type": "string"
					},
					"ZipName": {
						"type": "string",
						"defaultValue": "-1"
					},
					"FolderPath": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": {
						"value": "[parameters('ZIP_ROSS_FOR_SFTP_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('ZIP_ROSS_FOR_SFTP_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Error Report File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Daily Summary File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct FileNameZip [File Name],InterfaceID [Interface ID],sch.CodeDesc [Schedule Type],BusinessObject [Business Object],starttime [Start Time],endtime [End Time],\nEventMessage [Error Step],ErrorMessage [Error Message],cm.CodeDesc [Process Status],ISNULL([data status],'''') [Data Transaction Status] \nfrom EventLog el\ninner join CodeMaster cm on el.Status = cm.Code and cm.CodeType = ''STS''\ninner join CodeMaster sch on el.ScheduleType = sch.Code and sch.CodeType = ''SCH''\nouter apply (\n\tselect ''FAIL'' [Data Status]\n\tfrom ETLAudit ea\n\twhere el.EventID = ea.EventID and RowFailed > 0\n) a\nwhere el.ScheduleID <> '''' and el.ScheduleID <> ''1'' and EventType = ''O'' and (Status = 2 or [Data Status] = ''FAIL'') \nand CAST(StartTime as date) = CAST(''',pipeline().parameters.SingularDate,''' as date)\norder by StartTime')",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DELIMITED_TEXT",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@replace(pipeline().parameters.SingularDate,'-','')",
										"type": "Expression"
									},
									"FileName": "EVENTLOG.csv",
									"PathFolder": {
										"value": "@variables('Folder')",
										"type": "Expression"
									},
									"Department": {
										"value": "@variables('Department')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "File List Lookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Daily Summary File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select distinct FileNameZip\nfrom EventLog el\ninner join CodeMaster cm on el.Status = cm.Code and cm.CodeType = ''STS''\ninner join CodeMaster sch on el.ScheduleType = sch.Code and sch.CodeType = ''SCH''\nouter apply (\n\tselect ''FAIL'' [Data Status]\n\tfrom ETLAudit ea\n\twhere el.EventID = ea.EventID and RowFailed > 0\n) a\nwhere el.ScheduleID <> '''' and el.ScheduleID <> ''1'' and EventType = ''O'' and (Status = 2 or [Data Status] = ''FAIL'') \nand CAST(StartTime as date) = CAST(''',pipeline().parameters.SingularDate,''' as date)\n')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "File List Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('File List Lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "EVENTTASKLOG File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT SeqNo,StepName,StepDescription,etl.StartTime,etl.EndTime,StepInput,StepOutput,st.CodeDesc [Status],etl.ErrorMessage FROM EventTaskLog etl inner join EventTaskLogStatus st on etl.Status = st.Code\nINNER JOIN EventLog el on etl.EventID = el.EventID\nwhere FileNameZip = ''',item().fileNameZip,'''\norder by SeqNo')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DELIMITED_TEXT",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(replace(pipeline().parameters.SingularDate,'-',''),'/',item().fileNameZip)",
													"type": "Expression"
												},
												"FileName": "EVENTTASKLOG.csv",
												"PathFolder": {
													"value": "@variables('Folder')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ETLDATAAUDIT File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "EVENTTASKLOG File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select FileLine,cm.CodeDesc [Process Status],st.CodeDesc [Status], \n\tCASE WHEN etl.PackageType = 1 and isFailLoad = 0  THEN ''Success''\n\tWHEN etl.PackageType = 2 and flg is NULL THEN ''''\n\tWHEN etl.PackageType = 2 and flg = 1 and isFailLoad = 0 THEN ''Success''\n\tWHEN  etl.PackageType = 2 and flg = 1 and isFailLoad = 1 THEN ''Failed'' END [Data Validation],\nMessage\nfrom ETLDataAudit etl\nINNER JOIN EventLog el on etl.EventID = el.EventID \nINNER JOIN CodeMaster cm on cm.code = etl.PackageType and cm.CodeType = ''PKT''\nINNER JOIN Codemaster st on etl.status = st.code and st.codetype = ''STS''\nOUTER APPLY(\n\tSELECT 1 flg\n\tFROM ETLAudit ea\n\tWHERE el.EventID = ea.EventID and ea.PackageType = ''3''\n) a\nwhere el.FileNameZip = ''',item().fileNameZip,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DELIMITED_TEXT",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(replace(pipeline().parameters.SingularDate,'-',''),'/',item().fileNameZip)",
													"type": "Expression"
												},
												"FileName": "ETLDATAAUDIT.csv",
												"PathFolder": {
													"value": "@variables('Folder')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "ZIP File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "ETLDATAAUDIT File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@replace(pipeline().parameters.SingularDate,'-','')",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@item().fileNameZip",
													"type": "Expression"
												},
												"FileName": "*",
												"FolderPath": {
													"value": "@variables('Folder')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@replace(pipeline().parameters.SingularDate,'-','')",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@replace(replace(item().fileNameZip,'.zip','_errorfile.zip'),'EXPORT','Export')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@variables('Folder')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "ZIP File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FOLDER_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@replace(pipeline().parameters.SingularDate,'-','')",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@item().fileNameZip",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('Folder')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"recursive": true
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SingularDate": {
						"type": "string",
						"defaultValue": "2019-10-08"
					}
				},
				"variables": {
					"Folder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure"
					},
					"Department": {
						"type": "String",
						"defaultValue": "errorfile"
					},
					"Interface": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIN_253_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/acreditnote\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_FIN_253"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIN_254_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/customer\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_FIN_254"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FIN_267_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/customer\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_FIN_267"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_FILE_BACKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Backup Source File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6,
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "FILE_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@concat(pipeline().parameters.InterfaceName,'/processedfile')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "FOLDER_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@concat(pipeline().parameters.InterfaceName)",
										"type": "Expression"
									},
									"FolderName": "processedfile",
									"PathFolder": {
										"value": "@pipeline().parameters.DestinationArchiveFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Source File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@concat(pipeline().parameters.InterfaceName,'/processedfile')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false
						}
					},
					{
						"name": "Add Log for Source File Backup",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.FileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.FileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Source File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.SourceSystem,' Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Source File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Source File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Source File').Status,'\",\n\"Output\" : ',activity('Backup Source File').Output,',\n\"Error\" : ',activity('Backup Source File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.SourceSystem,' source file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "INT_PPM_206"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"DestinationFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination"
					},
					"LogFolder": {
						"type": "string",
						"defaultValue": "outbound/log"
					},
					"SourceArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/source"
					},
					"Department": {
						"type": "string",
						"defaultValue": "ppm"
					},
					"DestinationArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination"
					},
					"StagingFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "INT_PPM_206_PROJECT_Export_43271_20190515093732.zip"
					},
					"FileLocation": {
						"type": "string",
						"defaultValue": "/uem/dev/edgenta/azure/outbound/ppm/project"
					},
					"ScheduleType": {
						"type": "string",
						"defaultValue": "1"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_IN_PART_3A')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Compress Folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"enableSkipIncompatibleRow": false
						},
						"inputs": [
							{
								"referenceName": "ZIP_FILE_ROSS",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
										"type": "Expression"
									},
									"FileName": {
										"value": "*",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ZIP_ROSS",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"ZipName": {
										"value": "@concat(pipeline().parameters.ZipFileName,'.zip')",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Add Log for File Compression",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Compress Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress ',pipeline().parameters.DestinationSystem,' Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of compressing ',pipeline().parameters.DestinationSystem,' folder into .ZIP\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send to ORACLE SFTP",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Compress Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/sftp/oracle",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(pipeline().parameters.ZipFileName,'.zip'),'\",\"fileName\":\"',concat(pipeline().parameters.ZipFileName,'.zip'),'\",\"sftpTarget\":\"/uem/dev/edgenta/azure/inbound/',pipeline().parameters.Department,'/',pipeline().parameters.Foldername,'\",\"sftpType\": 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for File Sending",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Send to ORACLE SFTP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Fusion-Oracle\",\n\"JobId\" : \"',activity('Send to ORACLE SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send zip file to SFTP for ',pipeline().parameters.DestinationSystem,'\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ORACLE SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ORACLE SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ORACLE SFTP').Status,'\",\n\"Output\" : ',activity('Send to ORACLE SFTP').Output,',\n\"Error\" : ',activity('Send to ORACLE SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of sending .ZIP to Oracle SFTP ',pipeline().parameters.DestinationSystem,' from BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline for Trigger",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send to ORACLE SFTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GENERAL_TRIGGER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"InterfaceName": {
									"value": "@pipeline().parameters.InterfaceName",
									"type": "Expression"
								},
								"ParentPipelineID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_IN_PART_3A_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Compress Folder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 4,
							"enableSkipIncompatibleRow": false
						},
						"inputs": [
							{
								"referenceName": "ZIP_FILE_ROSS",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
										"type": "Expression"
									},
									"FileName": {
										"value": "*",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ZIP_ROSS",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"ZipName": {
										"value": "@concat(pipeline().parameters.ZipFileName,'.zip')",
										"type": "Expression"
									},
									"FolderPath": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Add Log for File Compression",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Compress Folder",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress ',pipeline().parameters.DestinationSystem,' Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of compressing ',pipeline().parameters.DestinationSystem,' folder into .ZIP\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send to ORACLE SFTP",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Compress Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/sftp/oracle",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(pipeline().parameters.ZipFileName,'.zip'),'\",\"fileName\":\"',concat(pipeline().parameters.ZipFileName,'.zip'),'\",\"sftpTarget\":\"/uem/dev/edgenta/azure/inbound/',pipeline().parameters.Department,'/',pipeline().parameters.Foldername,'\",\"sftpType\": 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for File Sending",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Send to ORACLE SFTP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Fusion-Oracle\",\n\"JobId\" : \"',activity('Send to ORACLE SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send zip file to SFTP for ',pipeline().parameters.DestinationSystem,'\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ORACLE SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ORACLE SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ORACLE SFTP').Status,'\",\n\"Output\" : ',activity('Send to ORACLE SFTP').Output,',\n\"Error\" : ',activity('Send to ORACLE SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of sending .ZIP to Oracle SFTP ',pipeline().parameters.DestinationSystem,' from BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Pipeline for Trigger",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send to ORACLE SFTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "GENERAL_TRIGGER",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"InterfaceName": {
									"value": "@pipeline().parameters.InterfaceName",
									"type": "Expression"
								},
								"ParentPipelineID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_ROSS_ADHOC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Adhoc Trigger",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "ScheduleType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('ScheduleType').output.firstRow.ScheduleType,'2')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Trigger ROSS",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://ross.uemedgenta.com:8060/api/file/GetFileName_SIT",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n  \"FileNamePass\": \"',concat(pipeline().parameters.FileName,'.zip'),'\",\n  \"Interface_ID\": \"',pipeline().parameters.InterfaceID,'\"\n}')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "ROSS",
											"password": {
												"type": "SecureString",
												"value": "**********"
											}
										}
									}
								},
								{
									"name": "Add Log for ROSS Trigger",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Trigger ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@pipeline().parameters.ParentPipelineID",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"Object": "WORKTYPENUMBER",
											"SourceSystem": "Edgenta-Azure",
											"DestSystem": "Edgenta-ROSS",
											"JobID": {
												"value": "@activity('Trigger ROSS').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": "Send Trigger File Request to ROSS",
											"StartTime": {
												"value": "@activity('Trigger ROSS').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Trigger ROSS').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@activity('Trigger ROSS').Status",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Trigger ROSS').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Trigger ROSS').Error),'',activity('Trigger ROSS').Error)",
												"type": "Expression"
											},
											"EventType": "OUTBOUND",
											"FilePath": "The step describes the process of triggering ROSS ADHOC API",
											"Input": {
												"value": "@concat('{\n  \"FileNamePass\": \"',concat(pipeline().parameters.FileName,'.zip'),'\",\n  \"Interface_ID\": \"',pipeline().parameters.InterfaceID,'\"\n}')",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.FileName",
												"type": "Expression"
											},
											"ErrorLoc": "-"
										}
									}
								}
							]
						}
					},
					{
						"name": "ScheduleType",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select scheduletype from eventlog where eventid = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "INT_FIN_252_ARINVOICE_Export_112958_20190726040518.zip"
					},
					"InterfaceID": {
						"type": "string",
						"defaultValue": "INT_FIN_252"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "7ca08189-1283-4f09-ac8c-d02c81863e4f"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_SOURCE_BACKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Backup Source File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6,
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "FOLDER_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.StagingFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "FOLDER_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.SourceArchiveFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Source File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FOLDER_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.StagingFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"recursive": true
						}
					},
					{
						"name": "Add Log for Source File Backup",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.FileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.FileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Source File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.SourceSystem,' Source File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Source File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Source File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Source File').Status,'\",\n\"Output\" : ',activity('Backup Source File').Output,',\n\"Error\" : ',activity('Backup Source File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.SourceSystem,' source file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "INT_PPM_206"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"DestinationFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination"
					},
					"LogFolder": {
						"type": "string",
						"defaultValue": "outbound/log"
					},
					"SourceArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/source"
					},
					"Department": {
						"type": "string",
						"defaultValue": "ppm"
					},
					"DestinationArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination"
					},
					"StagingFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "INT_PPM_206_PROJECT_Export_43271_20190515093732.zip"
					},
					"FileLocation": {
						"type": "string",
						"defaultValue": "/uem/dev/edgenta/azure/outbound/ppm/project"
					},
					"ScheduleType": {
						"type": "string",
						"defaultValue": "1"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GENERAL_SOURCE_BACKUP_FILE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Backup Source File",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6,
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "FILE_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "FOLDER_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FolderName": "-1",
									"PathFolder": {
										"value": "@pipeline().parameters.SourceArchiveFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Delete Source File",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "FILE_FUSION",
								"type": "DatasetReference",
								"parameters": {
									"InterfaceFolder": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"PathFolder": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false
						}
					},
					{
						"name": "Add Log for Source File Backup",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Backup Source File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.FileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.FileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Source File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.SourceSystem,' Source File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Source File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Source File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Source File').Status,'\",\n\"Output\" : ',activity('Backup Source File').Output,',\n\"Error\" : ',activity('Backup Source File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.SourceSystem,' source file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "INT_PPM_206"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"DestinationFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination"
					},
					"LogFolder": {
						"type": "string",
						"defaultValue": "outbound/log"
					},
					"SourceArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/source"
					},
					"Department": {
						"type": "string",
						"defaultValue": "ppm"
					},
					"DestinationArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination"
					},
					"StagingFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/source"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "INT_PPM_206_PROJECT_Export_43271_20190515093732.zip"
					},
					"FileLocation": {
						"type": "string",
						"defaultValue": "/uem/dev/edgenta/azure/outbound/ppm/project"
					},
					"ScheduleType": {
						"type": "string",
						"defaultValue": "1"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GENERAL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPM_206_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/project\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_PPM_206"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT auditid,Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,''' order by auditid desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-15.southeastasia.logic.azure.com:443/workflows/fc3bfc93901240a885d4457addcb7327/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=6sKJril80D_yqfg3tL4mTr9i63X6rt-c9xDFJTMTurc",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/item\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "INT_SCM_201"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_201_ITEMS_Export_46073_20190528000036.zip"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "235f469c-b1d8-47fe-b852-ae2cc7bfe8ee"
					},
					"SourceFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/sr"
					},
					"DestinationFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/dest"
					},
					"StagingFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/stg"
					},
					"SourceArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/src"
					},
					"DestinationArchiveFolder": {
						"type": "string",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/dest"
					},
					"LogFolder": {
						"type": "string",
						"defaultValue": "outbound/log"
					},
					"Department": {
						"type": "string",
						"defaultValue": "scm"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_3_ECLIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',activity('Get FileName').output.firstRow.Destination,'\", \"outputPath\": \"egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/checksum.txt\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@replace(last(split(activity('Get FileName').Output.firstRow.Destination,'/')),'.csv','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE PackageType = ''',pipeline().parameters.PackageType,''' and EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress ECLIP Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of compressing folder into .ZIP with unique Azure ID\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/',pipeline().parameters.DestinationSystem,'/fusion_outbound/',pipeline().parameters.Foldername,'\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send zip file to ECLIP SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of sending .ZIP to destination SFTP from BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate ECLIP Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of checksum generating after .CSV file has generated successfully\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					},
					"PackageType": {
						"type": "string",
						"defaultValue": "2"
					},
					"DestinationSystem": {
						"type": "string",
						"defaultValue": "ross"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_3_ECLIP_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"',activity('Get FileName').output.firstRow.Destination,'/',variables('ZipFileName'),'.csv\", \"outputPath\": \"egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/checksum.txt\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@replace(last(split(activity('Get FileName').Output.firstRow.Destination,'/')),'.csv','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE PackageType = ''',pipeline().parameters.PackageType,''' and EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress ECLIP Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of compressing folder into .ZIP with unique Azure ID\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send File to BLOB SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send File to BLOB SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send zip file to ECLIP SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send File to BLOB SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send File to BLOB SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send File to BLOB SFTP').Status,'\",\n\"Output\" : ',activity('Send File to BLOB SFTP').Output,',\n\"Error\" : ',activity('Send File to BLOB SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of sending .ZIP to destination SFTP from BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send File to BLOB SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/',pipeline().parameters.DestinationSystem,'/fusion_outbound/',pipeline().parameters.Foldername,'\"}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate ECLIP Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of checksum generating after .CSV file has generated successfully\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					},
					"PackageType": {
						"type": "string",
						"defaultValue": "2"
					},
					"DestinationSystem": {
						"type": "string",
						"defaultValue": "ross"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201_SP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_203_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/supplier\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_203"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_204_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT auditid,Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,''' order by auditid desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://prod-15.southeastasia.logic.azure.com:443/workflows/fc3bfc93901240a885d4457addcb7327/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=6sKJril80D_yqfg3tL4mTr9i63X6rt-c9xDFJTMTurc",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/blanketagreement\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_204"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_205_PART_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set ZipFileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/GenChecksum",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(variables('ZipFileName'),'zip',''),'/',concat(variables('ZipFileName'),'.csv'),'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZipFileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ZipFileName",
							"value": {
								"value": "@last(split(activity('Get FileName').Output.firstRow.Destination,'/'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get FileName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT Destination FROM ETLAudit WHERE EventID = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Get Checksum",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Generate Checksum').output.Response,''))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate Checksum File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ''',activity('Generate Checksum').output.Response,'''')",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_FILE_ROSS_CS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": "checksum.txt",
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Compress Folder",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(variables('ZipFileName'),'.zip','')",
													"type": "Expression"
												},
												"FileName": {
													"value": "*",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.StagingFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"ZipName": {
													"value": "@concat(variables('ZipFileName'),'.zip')",
													"type": "Expression"
												},
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add log for Checksum File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Generate Checksum File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum File').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum File\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Generate Checksum File').Status,'\",\n\"Output\" : ',activity('Generate Checksum File').Output,',\n\"Error\" : ',activity('Generate Checksum File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Compression",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Folder').ActivityRunId,'\",\n\"ActivityTask\" : \"Compress Folder\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Compress Folder').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Folder').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Folder').Status,'\",\n\"Output\" : ',activity('Compress Folder').Output,',\n\"Error\" : ',activity('Compress Folder').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send to ROSS SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',concat(variables('ZipFileName'),'.zip'),'\",\"fileName\":\"',concat(variables('ZipFileName'),'.zip'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_outbound/supplier\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for File Sending",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send to ROSS SFTP",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send to ROSS SFTP').ActivityRunId,'\",\n\"ActivityTask\" : \"Send to ROSS SFTP\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send to ROSS SFTP').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send to ROSS SFTP').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send to ROSS SFTP').Status,'\",\n\"Output\" : ',activity('Send to ROSS SFTP').Output,',\n\"Error\" : ',activity('Send to ROSS SFTP').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Add Log for Generate Checksum",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Generate Checksum",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Generate Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Generate Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Generate Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Generate Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Generate Checksum').Output.Response,''),'Failed','Succeeded'),'\",\n\"Output\" : ',activity('Generate Checksum').Output,',\n\"Error\" : ',activity('Generate Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_204"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_SCM_204_BLANKETAGREEMENT_Export_12345_20190513211645.zip"
					},
					"ParentPipelineID": {
						"type": "string"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_205"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZIP_ROSS')]"
			]
		}
	]
}