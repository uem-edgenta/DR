{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "edsaasdrdf02"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PPM_337_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"bilevt\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send Success ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_337\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_337_BILEVT where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ExecutePipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Success ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Success ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Success ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Success ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Success ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_337\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_PPM_337_BILEVT_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Fusion_FlatFileShare",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "@variables('fileProcessedFileRoss')",
												"fileLocation": {
													"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@last(split(pipeline().parameters.filePath,'/'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"bilevt\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"bilevt\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "inbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/inbound/ppm/bilevt",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Send Failed ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_337\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),' \"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_337_BILEVT where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Failed ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Failed ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Failed ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Failed ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Failed ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Failed ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_337\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),' \"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Error File to ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/billingevents/fileprocessed\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Send Error File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "WebActivity2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta-sit.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'),'\",\n\"Object\" : \"INVOICERECEIPT\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"FAIL\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the failed process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_PPM_337_BILEVT_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/inbound/ppm/billingevents/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "ppm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_PPM_337"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_PPM_337_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPM_363_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_PPM/PPM_363_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send Success ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ExecutePipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Success ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Success ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Success ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Success ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Success ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_PPM/PPM_363_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Fusion_FlatFileShare",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "@variables('fileProcessedFileRoss')",
												"fileLocation": {
													"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@last(split(pipeline().parameters.filePath,'/'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "inbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Send Failed ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Failed ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Failed ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Failed ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Failed ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Failed ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Failed ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Error File to ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/costaccrual/fileprocessed\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Send Error File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "ppm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_PPM_363"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_PPM_363"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PPM_363_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send Success ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "ExecutePipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Success ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Success ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Success ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Success ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Success ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_PPM_363_IMPORTCOST_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Fusion_FlatFileShare",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "@variables('fileProcessedFileRoss')",
												"fileLocation": {
													"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@last(split(pipeline().parameters.filePath,'/'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "inbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Send Failed ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Failed ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Failed ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Failed ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Failed ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Failed ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Failed ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Error File to ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/costaccrual/fileprocessed\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Send Error File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_PPM_363_IMPORTCOST_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "ppm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_PPM_363"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_PPM_363_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_2_ECLIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Load Data Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate ZIP File",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCM_201_PART_3_ECLIP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@pipeline().parameters.InterfaceName",
												"type": "Expression"
											},
											"ZipFileName": {
												"value": "@pipeline().parameters.ZipFileName",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@pipeline().parameters.ParentPipelineID",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"DestinationFolder": {
												"value": "@pipeline().parameters.DestinationFolder",
												"type": "Expression"
											},
											"StagingFolder": {
												"value": "@pipeline().parameters.StagingFolder",
												"type": "Expression"
											},
											"SourceArchiveFolder": {
												"value": "@pipeline().parameters.SourceArchiveFolder",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@pipeline().parameters.DestinationArchiveFolder",
												"type": "Expression"
											},
											"LogFolder": {
												"value": "@pipeline().parameters.LogFolder",
												"type": "Expression"
											},
											"Department": {
												"value": "@pipeline().parameters.Department",
												"type": "Expression"
											},
											"Foldername": {
												"value": "@variables('Foldername')",
												"type": "Expression"
											},
											"SourceSystem": {
												"value": "@pipeline().parameters.SourceSystem",
												"type": "Expression"
											},
											"DestinationSystem": {
												"value": "@pipeline().parameters.DestinationSystem",
												"type": "Expression"
											},
											"PackageType": "7"
										}
									}
								},
								{
									"name": "Backup Result File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate ZIP File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4
									},
									"inputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationArchiveFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								},
								{
									"name": "WebActivity7",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Result File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Result File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Result File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Result File').Status,'\",\n\"Output\" : ',activity('Backup Result File').Output,',\n\"Error\" : ',activity('Backup Result File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Delete2",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FOLDER_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								}
							]
						}
					},
					{
						"name": "Get Row Count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute SSIS For File Generating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select (select RowFailed from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''1'') RowFailed ,(select RowInsert from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''7'') RowInsert ')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Execute SSIS For File Generating",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_201_FOR_ECLIP.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "egsaasdrir",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"packageParameters": {
								"ErrorLocation": {
									"value": {
										"value": "@pipeline().parameters.LogFolder",
										"type": "Expression"
									}
								},
								"destination": {
									"value": {
										"value": "@concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(pipeline().parameters.ZipFileName,'.zip',''))",
										"type": "Expression"
									}
								},
								"file": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/',replace(pipeline().parameters.ZipFileName,'zip','csv'))",
										"type": "Expression"
									}
								},
								"pipeline_dt": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									}
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().parameters.ParentPipelineID",
										"type": "Expression"
									}
								},
								"zipname": {
									"value": {
										"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
										"type": "Expression"
									}
								}
							},
							"projectConnectionManagers": {},
							"packageConnectionManagers": {
								"OLEDBConnection": {
									"Password": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								},
								"edsaasdrsa02": {
									"AccountKey": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								}
							}
						}
					},
					{
						"name": "Add Log for File Generating",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute SSIS For File Generating",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute SSIS For File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute SSIS For File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute SSIS For File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute SSIS For File Generating').Status,'\",\n\"Output\" : ',activity('Execute SSIS For File Generating').Output,',\n\"Error\" : \"',activity('Execute SSIS For File Generating').Error,'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing SSIS via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get SSIS Result 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select top 1 etla.starttime,el.source,FileNameZip,FileNameData,el.BusinessObject,CASE WHEN a.Status IS NULL THEN ''SUCCESS'' ELSE ''ERROR'' END NotificationType,a.ErrorMessage,a.FileLine,\nCASE WHEN a.Status IS NULL THEN '''' ELSE ''/uem/dev/edgenta/azure/outbound/log/''+replace(el.FileNameZip,''.zip'','''')+''_Error_Log.zip'' END ErrorLocation\n from eventlog el --inner join eventtasklog etl on el.EventID = etl.EventID\n inner join ETLAudit etla on el.EventID = etla.EventID\n OUTER APPLY ( select FileLine,status,ErrorMessage\n from ETLDataAudit etld where el.EventID = etld.EventID and etld.Status = ''Failed'') a\nwhere el.eventid = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Send Success ACK",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get SSIS Result 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAck",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat(\n\t'{\"sourceSystem\":\"',activity('Get SSIS Result 2').output.firstRow.source,\n\t'\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n\t,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv')\n\t,'\",\"errorLocation\":\"\",\"businessObject\":\"',activity('Get SSIS Result 2').output.firstRow.BusinessObject\n\t,'\",\"notificationType\":\"',activity('Get SSIS Result 2').output.firstRow.NotificationType\n\t,'\",\"eventOccurredTime\":\"',string(activity('Get SSIS Result 2').output.firstRow.starttime)\n\t,'\",\"messageDescription\":\"',if(equals(activity('Get Row Count').output.firstRow.RowInsert,0),'No Data',''),'\",\"fileLine\":\"\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send File Processing ACK Fail 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute SSIS For File Generating",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAck",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"sourceSystem\":\"Edgenta-Azure\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\"errorLocation\":\"\",\"businessObject\":\"',variables('Foldername'),'\",\"notificationType\":\"ERROR\",\"eventOccurredTime\":\"',string(activity('Execute SSIS For File Generating').ExecutionStartTime),'\",\n\"messageDescription\":\"',replace(activity('Execute SSIS For File Generating').Output.OperationErrorMessages,'\"','\\\"'),'\",\"fileLine\":\"\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Processing File ACK Failure 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Send File Processing ACK Fail 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send File Processing ACK Fail 2').ActivityRunId,'\",\n\"ActivityTask\" : \"Send File Processing ',pipeline().parameters.SourceSystem,' ACK\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send File Processing ACK Fail 2').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send File Processing ACK Fail 2').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send File Processing ACK Fail 2').Status,'\",\n\"Output\" : ',concat('{\"sourceSystem\":\"Edgenta-Azure\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\"errorLocation\":\"\",\"businessObject\":\"BlankAggreement\",\"notificationType\":\"ERROR\",\"eventOccurredTime\":\"',string(activity('Execute SSIS For File Generating').ExecutionStartTime),'\",\n\"messageDescription\":\"',replace(activity('Execute SSIS For File Generating').Output.OperationErrorMessages,'\"','\\\"'),'\",\"fileLine\":\"\"}'),',\n\"Error\" : \"',if(empty(activity('Send File Processing ACK Fail 2').Error),'',string(activity('Send File Processing ACK Fail 2').Error)),'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of send the failed message of processed file via API of ',pipeline().parameters.SourceSystem,'  system\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Send Succes ACK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success ACK",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "ITEM",
								"SourceSystem": "Edgenta-Azure",
								"DestSystem": "ROSS-Azure",
								"JobID": {
									"value": "@activity('Send Success ACK').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": {
									"value": "@concat('Send File Processing ',pipeline().parameters.SourceSystem,' ACK')",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@activity('Send Success ACK').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Success ACK').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Success ACK').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
									"type": "Expression"
								},
								"EventType": "OUTBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system",
								"Input": {
									"value": "@concat(\n\t'{\"sourceSystem\":\"',activity('Get SSIS Result 2').output.firstRow.source,\n\t'\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n\t,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv')\n\t,'\",\"errorLocation\":\"\",\"businessObject\":\"',activity('Get SSIS Result 2').output.firstRow.BusinessObject\n\t,'\",\"notificationType\":\"',activity('Get SSIS Result 2').output.firstRow.NotificationType\n\t,'\",\"eventOccurredTime\":\"',string(activity('Get SSIS Result 2').output.firstRow.starttime)\n\t,'\",\"messageDescription\":\"',if(equals(activity('Get Row Count').output.firstRow.RowInsert,0),'No Data',''),'\",\"fileLine\":\"\"}')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_201"
					},
					"ID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_scm_201_BLANKETAGREEMENT_Export_42128_20190510084755.zip"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					},
					"PackageType": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					},
					"Foldername": {
						"type": "String",
						"defaultValue": "item"
					},
					"OraErrorPath": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/error"
					}
				},
				"folder": {
					"name": "INT_SCM_201"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_2_ECLIP_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Load Data Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate ZIP File",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCM_201_PART_3_ECLIP_SP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@pipeline().parameters.InterfaceName",
												"type": "Expression"
											},
											"ZipFileName": {
												"value": "@pipeline().parameters.ZipFileName",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@pipeline().parameters.ParentPipelineID",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"DestinationFolder": {
												"value": "@pipeline().parameters.DestinationFolder",
												"type": "Expression"
											},
											"StagingFolder": {
												"value": "@pipeline().parameters.StagingFolder",
												"type": "Expression"
											},
											"SourceArchiveFolder": {
												"value": "@pipeline().parameters.SourceArchiveFolder",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@pipeline().parameters.DestinationArchiveFolder",
												"type": "Expression"
											},
											"LogFolder": {
												"value": "@pipeline().parameters.LogFolder",
												"type": "Expression"
											},
											"Department": {
												"value": "@pipeline().parameters.Department",
												"type": "Expression"
											},
											"Foldername": {
												"value": "@variables('Foldername')",
												"type": "Expression"
											},
											"SourceSystem": {
												"value": "@pipeline().parameters.SourceSystem",
												"type": "Expression"
											},
											"DestinationSystem": {
												"value": "@pipeline().parameters.DestinationSystem",
												"type": "Expression"
											},
											"PackageType": "7"
										}
									}
								},
								{
									"name": "Backup Result File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate ZIP File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4
									},
									"inputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationArchiveFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								},
								{
									"name": "WebActivity7",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Result File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Result File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Result File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Result File').Status,'\",\n\"Output\" : ',activity('Backup Result File').Output,',\n\"Error\" : ',activity('Backup Result File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Delete2",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FOLDER_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								}
							]
						}
					},
					{
						"name": "Get Row Count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "File Generating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select (select RowFailed from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''1'') RowFailed ,(select RowInsert from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''7'') RowInsert ')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Add Log for File Generating",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "File Generating",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute Logic Apps For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('File Generating').Status,'\",\n\"Output\" : ',activity('File Generating').Output,',\n\"Error\" : ',activity('File Generating').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing Logic Apps via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get SSIS Result 2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select top 1 etla.starttime,el.source,FileNameZip,FileNameData,el.BusinessObject,CASE WHEN a.Status IS NULL THEN ''SUCCESS'' ELSE ''ERROR'' END NotificationType,a.ErrorMessage,a.FileLine,\nCASE WHEN a.Status IS NULL THEN '''' ELSE ''',variables('OraErrorPath'),'/',pipeline().parameters.Department,'/',variables('Foldername'),'/''+replace(el.FileNameZip,''.zip'','''')+''_Error_Log.zip'' END ErrorLocation\n from eventlog el --inner join eventtasklog etl on el.EventID = etl.EventID\n inner join ETLAudit etla on el.EventID = etla.EventID\n OUTER APPLY ( select FileLine,status,ErrorMessage\n from ETLDataAudit etld where el.EventID = etld.EventID and etld.Status = ''2'') a\nwhere el.eventid = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Send Success ACK",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get SSIS Result 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAck",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat(\n\t'{\"sourceSystem\":\"',activity('Get SSIS Result 2').output.firstRow.source,\n\t'\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n\t,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv')\n\t,'\",\"errorLocation\":\"\",\"businessObject\":\"',activity('Get SSIS Result 2').output.firstRow.BusinessObject\n\t,'\",\"notificationType\":\"',activity('Get SSIS Result 2').output.firstRow.NotificationType\n\t,'\",\"eventOccurredTime\":\"',string(activity('Get SSIS Result 2').output.firstRow.starttime)\n\t,'\",\"messageDescription\":\"',if(equals(activity('Get Row Count').output.firstRow.RowInsert,0),'No Data',''),'\",\"fileLine\":\"\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send File Processing ACK Fail 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "File Generating",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAck",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\"sourceSystem\":\"Edgenta-Azure\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\"errorLocation\":\"\",\"businessObject\":\"',variables('Foldername'),'\",\"notificationType\":\"ERROR\",\"eventOccurredTime\":\"',string(activity('File Generating').ExecutionStartTime),'\",\n\"messageDescription\":\"',replace(string(activity('File Generating').Error),'\"','\\\"'),'\",\"fileLine\":\"\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Processing File ACK Failure 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Send File Processing ACK Fail 2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Edgenta-Azure\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Send File Processing ACK Fail 2').ActivityRunId,'\",\n\"ActivityTask\" : \"Send File Processing ',pipeline().parameters.SourceSystem,' ACK\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send File Processing ACK Fail 2').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send File Processing ACK Fail 2').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send File Processing ACK Fail 2').Status,'\",\n\"Output\" : ',concat('{\"sourceSystem\":\"Edgenta-Azure\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\"errorLocation\":\"\",\"businessObject\":\"BlankAggreement\",\"notificationType\":\"ERROR\",\"eventOccurredTime\":\"',string(activity('File Generating').ExecutionStartTime),'\",\n\"messageDescription\":\"',replace(string(activity('File Generating').Error),'\"','\\\"'),'\",\"fileLine\":\"\"}'),',\n\"Error\" : \"',if(empty(activity('Send File Processing ACK Fail 2').Error),'',string(activity('Send File Processing ACK Fail 2').Error)),'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of send the failed message of processed file via API of ',pipeline().parameters.SourceSystem,'  system\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Send Succes ACK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success ACK",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "ITEM",
								"SourceSystem": "Edgenta-Azure",
								"DestSystem": "ROSS-Azure",
								"JobID": {
									"value": "@activity('Send Success ACK').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": {
									"value": "@concat('Send File Processing ',pipeline().parameters.SourceSystem,' ACK for ECLIP')",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@activity('Send Success ACK').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Success ACK').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Success ACK').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
									"type": "Expression"
								},
								"EventType": "OUTBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system for ECLIP",
								"Input": {
									"value": "@concat(\n\t'{\"sourceSystem\":\"',activity('Get SSIS Result 2').output.firstRow.source,\n\t'\",\"zipfileName\":\"',pipeline().parameters.ZipFileName\n\t,'\",\"dataFileName\":\"',replace(pipeline().parameters.ZipFileName,'zip','csv')\n\t,'\",\"errorLocation\":\"\",\"businessObject\":\"',activity('Get SSIS Result 2').output.firstRow.BusinessObject\n\t,'\",\"notificationType\":\"',activity('Get SSIS Result 2').output.firstRow.NotificationType\n\t,'\",\"eventOccurredTime\":\"',string(activity('Get SSIS Result 2').output.firstRow.starttime)\n\t,'\",\"messageDescription\":\"',if(equals(activity('Get Row Count').output.firstRow.RowInsert,0),'No Data',''),'\",\"fileLine\":\"\"}')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "File Generating",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/int/scm/201/eclip",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\t\"eventID\": \"',pipeline().parameters.ParentPipelineID,'\",\n\t\"destination\": \"egsaasdrblob01/',concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(pipeline().parameters.ZipFileName,'.zip','')),'\",\n\t\"zipname\": \"',replace(pipeline().parameters.ZipFileName,'.zip',''),'\",\n\t\"ErrorLocation\": \"',pipeline().parameters.LogFolder,'\",\n\t\"file\": \"',concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/',replace(pipeline().parameters.ZipFileName,'zip','csv')),'\",\n\t\"pipeline_dt\": \"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\"\n}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "Basic",
								"username": "uem_edgenta",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							}
						}
					},
					{
						"name": "Add Log for Success File Generating",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "File Generating",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"arInvoice\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute Logic Apps For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('File Generating').Status,'\",\n\"Output\" : ',json(concat('{\"status\":',activity('File Generating').Output.Status,',\"message\":\"',activity('File Generating').Output.Message,'\"}')),',\n\"Error\" : ',activity('File Generating').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing Logic Apps via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "scm_201"
					},
					"ID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_scm_201_BLANKETAGREEMENT_Export_42128_20190510084755.zip"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					},
					"Foldername": {
						"type": "String",
						"defaultValue": "item"
					},
					"OraErrorPath": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/error"
					}
				},
				"folder": {
					"name": "INT_SCM_201_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_201_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_201_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'SUCCESS','FAIL'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/ppm/project",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/item/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_201"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_4_ECLIP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_201_FOR_ECLIP_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_201_FOR_ECLIP_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {
											"OLEDBConnection": {
												"Password": {
													"value": {
														"type": "SecureString",
														"value": "**********"
													}
												}
											},
											"edsaasdrsa02": {
												"AccountKey": {
													"value": {
														"type": "SecureString",
														"value": "**********"
													}
												}
											}
										}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'),'\",\n\"Object\" : \"TRANSFERECLIP\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'),'\",\n\"Object\" : \"TRANSFERECLIP\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'SUCCESS','FAIL'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/item",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/eclip/fusion_outbound/item/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/eclip"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_201"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/eclip"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_4_ECLIP_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.csv'),'\",\n\"Object\" : \"Item\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_201_ITEMS_ECLIP_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": "-",
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.csv'),'\",\n\"Object\" : \"TRANSFERECLIP\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/item",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_201_ITEMS_ECLIP_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"customer\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/eclip/fusion_outbound/item/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/eclip"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_201"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/eclip"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ECLIP"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_201_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_201_ITEMS_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": "-",
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/item",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "WebActivity2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta-sit.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',replace(pipeline().parameters.fileName,'.zip','_fileprocessed.txt'),'\",\n\"Object\" : \"INVOICERECEIPT\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"FAIL\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the failed process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_201_ITEMS_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Backup File_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/item",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"customer\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/item/fileprocessed/INT_SCM_231_INVENTORYITEMCOST_Import_46001_20190527124749.csv"
					},
					"pipelineID": {
						"type": "string",
						"defaultValue": "11ddd79b-1b88-4282-a9ee-cb2d0fc5f0ab"
					},
					"totalRow": {
						"type": "int",
						"defaultValue": 15
					},
					"successRow": {
						"type": "int",
						"defaultValue": 8
					},
					"failedRow": {
						"type": "int",
						"defaultValue": 7
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/item/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_201"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_201_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_203_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_203_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_203_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'SUCCESS','FAIL'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/ppm/project",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/supplier/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_203"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_203"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_203_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_203_SUPPLIER_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": "-",
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/ppm/project",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_203_SUPPLIER_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"customer\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/supplier/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_203"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_203_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_204_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_204_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"blanketagreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_204_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"blanketagreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"blanketagreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'SUCCESS','FAIL'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/blanketagreement",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/blanketagreement/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_204"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_204"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_204_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"blanketagreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_204_BLANKETAGREEMENT_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": "-",
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"blanketagreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/blanketagreement",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_204_BLANKETAGREEMENT_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"customer\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/blanketagreement/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_204"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_204_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_205_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_205_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_205_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"specialCase": {
												"value": {
													"value": "@variables('SpecialCase')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FOLDER_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@variables('InterfaceFolder')",
													"type": "Expression"
												},
												"FolderName": "processedfile",
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/project",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Get Metadata File",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": "log",
												"FileName": {
													"value": "@replace(toupper(pipeline().parameters.fileName),'ZIP','txt')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('LogFolder')",
													"type": "Expression"
												},
												"Department": "outbound"
											}
										},
										"fieldList": [
											"exists"
										]
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SpecialCase",
										"value": {
											"value": "@activity('Get Metadata File').output.Exists",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/po/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_205"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					},
					"SpecialCase": {
						"type": "Boolean"
					},
					"LogFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure"
					}
				},
				"folder": {
					"name": "INT_SCM_205"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_231_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_231_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_231_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/inventoryitemcost",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/inventoryitemcost/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_231"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_231"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_303_PART_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Data Generating Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate ZIP File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Compress Inner Zip File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCM_303_PART_3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@pipeline().parameters.InterfaceName",
												"type": "Expression"
											},
											"ZipFileName": {
												"value": "@pipeline().parameters.ZipFileName",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@pipeline().parameters.ParentPipelineID",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"DestinationFolder": {
												"value": "@pipeline().parameters.DestinationFolder",
												"type": "Expression"
											},
											"StagingFolder": {
												"value": "@pipeline().parameters.StagingFolder",
												"type": "Expression"
											},
											"SourceArchiveFolder": {
												"value": "@pipeline().parameters.SourceArchiveFolder",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@pipeline().parameters.DestinationArchiveFolder",
												"type": "Expression"
											},
											"LogFolder": {
												"value": "@pipeline().parameters.LogFolder",
												"type": "Expression"
											},
											"Department": {
												"value": "@pipeline().parameters.Department",
												"type": "Expression"
											},
											"Foldername": {
												"value": "@variables('Foldername')",
												"type": "Expression"
											},
											"SourceSystem": {
												"value": "@pipeline().parameters.SourceSystem",
												"type": "Expression"
											},
											"DestinationSystem": {
												"value": "@pipeline().parameters.DestinationSystem",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Backup Result File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate ZIP File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4
									},
									"inputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.csv','.zip')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.csv','.zip')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationArchiveFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								},
								{
									"name": "WebActivity7",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Result File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Result File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Result File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Result File').Status,'\",\n\"Output\" : ',activity('Backup Result File').Output,',\n\"Error\" : ',activity('Backup Result File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Delete2",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FOLDER_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "WebActivity8",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Inner Zip File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Inner Zip File').ActivityRunId,'\",\n\"ActivityTask\" : \"Encrypt ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Compress Inner Zip File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Inner Zip File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Inner Zip File').Status,'\",\n\"Output\" : ',activity('Compress Inner Zip File').Output,',\n\"Error\" : ',activity('Compress Inner Zip File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of encrypt ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Compress Inner Zip File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@concat(pipeline().parameters.ZipFileName,'/Attachment_files.zip')",
													"type": "Expression"
												},
												"FileName": "*",
												"FolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(pipeline().parameters.InterfaceName,'/',replace(pipeline().parameters.ZipFileName,'.zip',''))",
													"type": "Expression"
												},
												"ZipName": "Attachment_files.zip",
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Row Count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Data Loading Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select (select sum(RowFailed) RowFailed from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''4'') RowFailed ,(select sum(RowInsert) RowInsert from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''5'') RowInsert ')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Add Log for SSIS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute SSIS for Data Loading",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute SSIS for Data Loading').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS for ',pipeline().parameters.SourceSystem,' Data Loading\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute SSIS for Data Loading').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute SSIS for Data Loading').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute SSIS for Data Loading').Status,'\",\n\"Output\" : ',activity('Execute SSIS for Data Loading').Output,',\n\"Error\" : ',activity('Execute SSIS for Data Loading').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.SourceSystem,' data loading by executing SSIS in the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute SSIS for Data Loading",
						"type": "ExecuteSSISPackage",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"packageLocation": {
								"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_303.dtsx",
								"type": "SSISDB"
							},
							"environmentPath": null,
							"connectVia": {
								"referenceName": "egsaasdrir",
								"type": "IntegrationRuntimeReference"
							},
							"loggingLevel": "Basic",
							"packageParameters": {
								"ErrorLocation": {
									"value": {
										"value": "@pipeline().parameters.LogFolder",
										"type": "Expression"
									}
								},
								"FileInvoiceAll": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/invoice_header.csv')",
										"type": "Expression"
									}
								},
								"FilePoHeader": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/po_header.csv')",
										"type": "Expression"
									}
								},
								"FilePoLines": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/po_lines.csv')",
										"type": "Expression"
									}
								},
								"FileRcvHeader": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/receipt_header.csv')",
										"type": "Expression"
									}
								},
								"FileRcvLines": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/receipt_lines.csv')",
										"type": "Expression"
									}
								},
								"destination": {
									"value": {
										"value": "@concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(replace(pipeline().parameters.ZipFileName,'.csv',''),'.zip',''))",
										"type": "Expression"
									}
								},
								"pipeline_dt": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									}
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().parameters.ParentPipelineID",
										"type": "Expression"
									}
								},
								"zipname": {
									"value": {
										"value": "@replace(pipeline().parameters.ZipFileName,'.csv','')",
										"type": "Expression"
									}
								}
							},
							"projectConnectionManagers": {},
							"packageConnectionManagers": {
								"OLEDBConnection": {
									"Password": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								},
								"edsaasdrsitsa": {
									"AccountKey": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								},
								"myConnectionDB": {
									"Password": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								},
								"uemedblob 1": {
									"AccountKey": {
										"value": {
											"type": "SecureString",
											"value": "**********"
										}
									}
								}
							}
						}
					},
					{
						"name": "Send Failed ACK",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute SSIS for Data Loading",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"\",\n\"Status\":\"',if(equals(activity('Execute SSIS for Data Loading').Status,'Successed'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"',replace(activity('Execute SSIS for Data Loading').Output.OperationErrorMessages,'\"','\\\"'),'\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Failed ACK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Failed ACK",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "BLANKETAGREEMENT",
								"SourceSystem": "Edgenta-Azure",
								"DestSystem": "ROSS-Azure",
								"JobID": {
									"value": "@activity('Send Failed ACK').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": "Send Failed Received File ACK",
								"StartTime": {
									"value": "@activity('Send Failed ACK').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Failed ACK').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Failed ACK').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
									"type": "Expression"
								},
								"EventType": "OUTBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system",
								"Input": {
									"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"\",\n\"Status\":\"',if(equals(activity('Execute SSIS for Data Loading').Status,'Succeeded'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"',replace(activity('Execute SSIS for Data Loading').Output.OperationErrorMessages,'\"','\\\"'),'\"\n}')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Success ACK File Received",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup BU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"Business_Unit\":\"',if(empty(activity('Lookup BU').output.firstRow.BU),'',activity('Lookup BU').output.firstRow.BU),'\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"',if(equals(variables('SSISStatus'),'1'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup BU",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set SSIS Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select BU from (select business_unit BU from INT_SCM_303_INVOICEALL where PIPELINE_ID = ''',pipeline().parameters.ParentPipelineID,'''\nunion\nselect '''') a order by BU desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Add Log for Send Success ACK File Received",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success ACK File Received",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "PO",
								"SourceSystem": "ROSS-Azure",
								"DestSystem": "Edgenta-Azure",
								"JobID": {
									"value": "@activity('Send Success ACK File Received').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": {
									"value": "@concat('Send File Received ',pipeline().parameters.SourceSystem,' ACK')",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@activity('Send Success ACK File Received').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Success ACK File Received').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK File Received').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Success ACK File Received').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Success ACK File Received').Error),'',string(activity('Send Success ACK File Received').Error))",
									"type": "Expression"
								},
								"EventType": "INBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system",
								"Input": {
									"value": "@concat('{\n\"Business_Unit\":\"',if(empty(activity('Lookup BU').output.firstRow.BU),'',activity('Lookup BU').output.firstRow.BU),'\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"',if(equals(variables('SSISStatus'),'1'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"\"\n}')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If Data Loading Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup SSIS Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup SSIS Error').output.firstRow.Count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Execute SSIS For File Generating",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_303_GenerateFile.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"ErrorLocation": {
												"value": {
													"value": "@pipeline().parameters.LogFolder",
													"type": "Expression"
												}
											},
											"FileInvoiceAll": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/Invoice_header.csv')",
													"type": "Expression"
												}
											},
											"FilePoHeader": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/PO_Header.csv')",
													"type": "Expression"
												}
											},
											"FilePoLines": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/PO_Lines.csv')",
													"type": "Expression"
												}
											},
											"FileRcvHeader": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/Receipt_header.csv')",
													"type": "Expression"
												}
											},
											"FileRcvLines": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/Receipt_Lines.csv')",
													"type": "Expression"
												}
											},
											"destination": {
												"value": {
													"value": "@concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(replace(pipeline().parameters.ZipFileName,'.csv',''),'.zip',''))",
													"type": "Expression"
												}
											},
											"file": {
												"value": {
													"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(pipeline().parameters.ZipFileName,'zip','csv'))",
													"type": "Expression"
												}
											},
											"pipeline_dt": {
												"value": {
													"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
													"type": "Expression"
												}
											},
											"pipeline_id": {
												"value": {
													"value": "@pipeline().parameters.ParentPipelineID",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.csv','')",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {
											"OLEDBConnection": {
												"Password": {
													"value": {
														"type": "SecureString",
														"value": "**********"
													}
												}
											},
											"edsaasdrsa02": {
												"AccountKey": {
													"value": {
														"type": "SecureString",
														"value": "**********"
													}
												}
											}
										}
									}
								},
								{
									"name": "Add Log For Data Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Execute SSIS For File Generating",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute SSIS For File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute SSIS For File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute SSIS For File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute SSIS For File Generating').Status,'\",\n\"Output\" : ',activity('Execute SSIS For File Generating').Output,',\n\"Error\" : \"',activity('Execute SSIS For File Generating').Error,'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing SSIS via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup SSIS Error",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute SSIS for Data Loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select sum(RowFailed) Count from etlaudit where PackageType = ''4'' and eventid = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set SSIS Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SSISStatus",
							"value": {
								"value": "@if(equals(and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0)),true),'1','0')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup Error Desc",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute SSIS for Data Loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ColumnError from (\nselect ColumnError from etldataaudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''4'' and Status = 2\nunion\nselect '''') a\norder by ColumnError desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WebActivity9",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup Error Desc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute SSIS for Data Loading').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS for ',pipeline().parameters.SourceSystem,' Data Loading\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute SSIS for Data Loading').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute SSIS for Data Loading').ExecutionEndTime,'\",\n\"Status\" : \"',if(empty(activity('Lookup Error Desc').output.firstRow.ColumnError),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Execute SSIS for Data Loading').Output,',\n\"Error\" : \"',if(empty(activity('Lookup Error Desc').output.firstRow.ColumnError),'',activity('Lookup Error Desc').output.firstRow.ColumnError),'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.SourceSystem,' data loading by executing SSIS in the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "PPM_204"
					},
					"ID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_PPM_204_BLANKETAGREEMENT_Export_42128_20190510084755.zip"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					},
					"Foldername": {
						"type": "String",
						"defaultValue": "INT_303_poRecInv"
					},
					"OraErrorPath": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/error"
					},
					"SSISStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_303"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_303_PART_2_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Data Generating Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Generate ZIP File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Compress Inner Zip File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCM_303_PART_3_SP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@pipeline().parameters.InterfaceName",
												"type": "Expression"
											},
											"ZipFileName": {
												"value": "@pipeline().parameters.ZipFileName",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@pipeline().parameters.ParentPipelineID",
												"type": "Expression"
											},
											"SourceFolder": {
												"value": "@pipeline().parameters.SourceFolder",
												"type": "Expression"
											},
											"DestinationFolder": {
												"value": "@pipeline().parameters.DestinationFolder",
												"type": "Expression"
											},
											"StagingFolder": {
												"value": "@pipeline().parameters.StagingFolder",
												"type": "Expression"
											},
											"SourceArchiveFolder": {
												"value": "@pipeline().parameters.SourceArchiveFolder",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@pipeline().parameters.DestinationArchiveFolder",
												"type": "Expression"
											},
											"LogFolder": {
												"value": "@pipeline().parameters.LogFolder",
												"type": "Expression"
											},
											"Department": {
												"value": "@pipeline().parameters.Department",
												"type": "Expression"
											},
											"Foldername": {
												"value": "@variables('Foldername')",
												"type": "Expression"
											},
											"SourceSystem": {
												"value": "@pipeline().parameters.SourceSystem",
												"type": "Expression"
											},
											"DestinationSystem": {
												"value": "@pipeline().parameters.DestinationSystem",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Backup Result File",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Generate ZIP File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false,
										"parallelCopies": 4
									},
									"inputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.csv','.zip')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.csv','.zip')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationArchiveFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FileName": {
													"value": "@pipeline().parameters.ZipFileName",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false
									}
								},
								{
									"name": "WebActivity7",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Backup Result File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Backup Result File').ActivityRunId,'\",\n\"ActivityTask\" : \"Backup ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Backup Result File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Backup Result File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Backup Result File').Status,'\",\n\"Output\" : ',activity('Backup Result File').Output,',\n\"Error\" : ',activity('Backup Result File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of backup ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Delete2",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Delete1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "FOLDER_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@replace(pipeline().parameters.ZipFileName,'.zip','')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"recursive": true
									}
								},
								{
									"name": "WebActivity8",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Compress Inner Zip File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"Supplier\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Compress Inner Zip File').ActivityRunId,'\",\n\"ActivityTask\" : \"Encrypt ',pipeline().parameters.DestinationSystem,'Destination File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Compress Inner Zip File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Compress Inner Zip File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Compress Inner Zip File').Status,'\",\n\"Output\" : ',activity('Compress Inner Zip File').Output,',\n\"Error\" : ',activity('Compress Inner Zip File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of encrypt ',pipeline().parameters.DestinationSystem,' destination file in BLOB\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Compress Inner Zip File",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ZIP_FILE_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@pipeline().parameters.InterfaceName",
													"type": "Expression"
												},
												"FolderName": {
													"value": "@concat(pipeline().parameters.ZipFileName,'/Attachment_files.zip')",
													"type": "Expression"
												},
												"FileName": "*",
												"FolderPath": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ZIP_ROSS",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(pipeline().parameters.InterfaceName,'/',replace(pipeline().parameters.ZipFileName,'.zip',''))",
													"type": "Expression"
												},
												"ZipName": "Attachment_files.zip",
												"FolderPath": {
													"value": "@pipeline().parameters.DestinationFolder",
													"type": "Expression"
												},
												"Department": {
													"value": "@pipeline().parameters.Department",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get Row Count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "If Data Loading Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select (select sum(RowFailed) RowFailed from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''4'') RowFailed ,(select sum(RowInsert) RowInsert from ETLAudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''5'') RowInsert ')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Add Log for SSIS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Procedure for Data Loading",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute Procedure for Data Loading').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS for ',pipeline().parameters.SourceSystem,' Data Loading\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute Procedure for Data Loading').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute Procedure for Data Loading').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute Procedure for Data Loading').Status,'\",\n\"Output\" : ',activity('Execute Procedure for Data Loading').Output,',\n\"Error\" : ',activity('Execute Procedure for Data Loading').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.SourceSystem,' data loading by executing SSIS in the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send Failed ACK",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Procedure for Data Loading",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"\",\n\"Status\":\"',if(equals(activity('Execute Procedure for Data Loading').Status,'Successed'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"',replace(activity('Execute Procedure for Data Loading').Output.OperationErrorMessages,'\"','\\\"'),'\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add Log for Failed ACK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Failed ACK",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "BLANKETAGREEMENT",
								"SourceSystem": "Edgenta-Azure",
								"DestSystem": "ROSS-Azure",
								"JobID": {
									"value": "@activity('Send Failed ACK').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": "Send Failed Received File ACK",
								"StartTime": {
									"value": "@activity('Send Failed ACK').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Failed ACK').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Failed ACK').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
									"type": "Expression"
								},
								"EventType": "OUTBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system",
								"Input": {
									"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"\",\n\"Status\":\"',if(equals(activity('Execute Procedure for Data Loading').Status,'Succeeded'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"',replace(activity('Execute Procedure for Data Loading').Output.OperationErrorMessages,'\"','\\\"'),'\"\n}')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Send Success ACK File Received",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup BU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{\n\"Business_Unit\":\"',if(empty(activity('Lookup BU').output.firstRow.BU),'',activity('Lookup BU').output.firstRow.BU),'\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"',if(equals(variables('SSISStatus'),'1'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup BU",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set SSIS Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select BU from (select business_unit BU from INT_SCM_303_INVOICEALL where PIPELINE_ID = ''',pipeline().parameters.ParentPipelineID,'''\nunion\nselect '''') a order by BU desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Add Log for Send Success ACK File Received",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send Success ACK File Received",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "API_LOG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EventID": {
									"value": "@pipeline().parameters.ParentPipelineID",
									"type": "Expression"
								},
								"EventName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"FileZipName": {
									"value": "@variables('ZipFileName')",
									"type": "Expression"
								},
								"Object": "PO",
								"SourceSystem": "ROSS-Azure",
								"DestSystem": "Edgenta-Azure",
								"JobID": {
									"value": "@activity('Send Success ACK File Received').ActivityRunId",
									"type": "Expression"
								},
								"ActivityTask": {
									"value": "@concat('Send File Received ',pipeline().parameters.SourceSystem,' ACK')",
									"type": "Expression"
								},
								"StartTime": {
									"value": "@activity('Send Success ACK File Received').ExecutionStartTime",
									"type": "Expression"
								},
								"EndTime": {
									"value": "@activity('Send Success ACK File Received').ExecutionEndTime",
									"type": "Expression"
								},
								"Status": {
									"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK File Received').Output.Status)),'Succeeded','Failed')",
									"type": "Expression"
								},
								"Output": {
									"value": "@activity('Send Success ACK File Received').output",
									"type": "Expression"
								},
								"Error": {
									"value": "@if(empty(activity('Send Success ACK File Received').Error),'',string(activity('Send Success ACK File Received').Error))",
									"type": "Expression"
								},
								"EventType": "INBOUND",
								"FilePath": "The step describes the process of send the success message of received file via API of source system",
								"Input": {
									"value": "@concat('{\n\"Business_Unit\":\"',if(empty(activity('Lookup BU').output.firstRow.BU),'',activity('Lookup BU').output.firstRow.BU),'\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.ZipFileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"',if(equals(variables('SSISStatus'),'1'),'SUCCESS','FAIL'),'\",\n\"Error_Message\":\"\"\n}')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If Data Loading Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup SSIS Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup SSIS Error').output.firstRow.Count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Add Log For Data Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Execute Logic Apps for File Generating",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute Logic Apps for File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute Logic Apps for File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute Logic Apps for File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute Logic Apps for File Generating').Status,'\",\n\"Output\" : ',activity('Execute Logic Apps for File Generating').Output,',\n\"Error\" : \"',activity('Execute Logic Apps for File Generating').Error,'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing SSIS via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Logic Apps for File Generating",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/int/scm/303",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"eventID\": \"',pipeline().parameters.ParentPipelineID,'\",\n\"destination\": \"egsaasdrblob01/',concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(replace(pipeline().parameters.ZipFileName,'.csv',''),'.zip','')),'\",\n\"zipname\": \"',replace(pipeline().parameters.ZipFileName,'.csv',''),'\",\n\"ErrorLocation\": \"',pipeline().parameters.LogFolder,'\",\n\"file\": \"\",\n\"pipeline_dt\": \"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"packagename\": \"',substring(pipeline().parameters.ZipFileName,0,indexof(pipeline().parameters.ZipFileName,'_INT')),'\"\n}')",
											"type": "Expression"
										},
										"authentication": {
											"type": "Basic",
											"username": "uem_edgenta",
											"password": {
												"type": "SecureString",
												"value": "**********"
											}
										}
									}
								},
								{
									"name": "Add Log for Success File Generating",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Execute Logic Apps for File Generating",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"arInvoice\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute Logic Apps for File Generating').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute Logic Apps For ',pipeline().parameters.DestinationSystem,' File Generating\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute Logic Apps for File Generating').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute Logic Apps for File Generating').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Execute Logic Apps for File Generating').Status,'\",\n\"Output\" : ',json(concat('{\"status\":',activity('Execute Logic Apps for File Generating').Output.Status,',\"message\":\"',activity('Execute Logic Apps for File Generating').Output.Message,'\"}')),',\n\"Error\" : ',activity('Execute Logic Apps for File Generating').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.DestinationSystem,' .CSV file generating into BLOB by executing Logic Apps via the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup SSIS Error",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Procedure for Data Loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select sum(RowFailed) Count from etlaudit where PackageType = ''4'' and eventid = ''',pipeline().parameters.ParentPipelineID,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set SSIS Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Row Count",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SSISStatus",
							"value": {
								"value": "@if(equals(and(equals(activity('Get Row Count').output.firstRow.RowFailed,0),greater(activity('Get Row Count').output.firstRow.RowInsert,0)),true),'1','0')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup Error Desc",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Procedure for Data Loading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ColumnError from (\nselect ColumnError from etldataaudit where eventid = ''',pipeline().parameters.ParentPipelineID,''' and PackageType = ''4'' and Status = 2\nunion\nselect '''') a\norder by ColumnError desc')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WebActivity9",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup Error Desc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://edgenta.azure-api.net/adf/AuditLog",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('\n{\"EventID\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',pipeline().parameters.ZipFileName,'\",\n\"FileName\" : \"',replace(pipeline().parameters.ZipFileName,'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Execute Procedure for Data Loading').ActivityRunId,'\",\n\"ActivityTask\" : \"Execute SSIS for ',pipeline().parameters.SourceSystem,' Data Loading\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Execute Procedure for Data Loading').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Execute Procedure for Data Loading').ExecutionEndTime,'\",\n\"Status\" : \"',if(empty(activity('Lookup Error Desc').output.firstRow.ColumnError),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Execute Procedure for Data Loading').Output,',\n\"Error\" : \"',if(empty(activity('Lookup Error Desc').output.firstRow.ColumnError),'',activity('Lookup Error Desc').output.firstRow.ColumnError),'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of ',pipeline().parameters.SourceSystem,' data loading by executing SSIS in the Azure Data Factory\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute Procedure for Data Loading",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[INSERT_INT_SCM_303]",
							"storedProcedureParameters": {
								"destination": {
									"value": {
										"value": "@concat(pipeline().parameters.DestinationFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',replace(replace(pipeline().parameters.ZipFileName,'.csv',''),'.zip',''))",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorLocation": {
									"value": {
										"value": "@pipeline().parameters.LogFolder",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileInvoice_Header": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/invoice_header.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileInvoice_Lines": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/invoice_lines.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FilePO_Header": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/po_header.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FilePO_Lines": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/po_lines.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileReceipt_Header": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/receipt_header.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"FileReceipt_Lines": {
									"value": {
										"value": "@concat(pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',pipeline().parameters.ZipFileName,'/receipt_lines.csv')",
										"type": "Expression"
									},
									"type": "String"
								},
								"Pass": {
									"value": null,
									"type": "String"
								},
								"pipeline_dt": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().parameters.ParentPipelineID",
										"type": "Expression"
									},
									"type": "String"
								},
								"ZipName": {
									"value": {
										"value": "@replace(pipeline().parameters.ZipFileName,'.csv','')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "edsaasdrdb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"InterfaceName": {
						"type": "string",
						"defaultValue": "PPM_204"
					},
					"ID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "INT_PPM_204_BLANKETAGREEMENT_Export_42128_20190510084755.zip"
					},
					"ParentPipelineID": {
						"type": "string",
						"defaultValue": "444a652b-3337-46a0-9410-79d4e88db483"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestinationFolder": {
						"type": "string"
					},
					"StagingFolder": {
						"type": "string"
					},
					"LogFolder": {
						"type": "string"
					},
					"SourceArchiveFolder": {
						"type": "string"
					},
					"DestinationArchiveFolder": {
						"type": "string"
					},
					"Department": {
						"type": "string"
					},
					"SourceSystem": {
						"type": "string"
					},
					"DestinationSystem": {
						"type": "string"
					}
				},
				"variables": {
					"ZipFileName": {
						"type": "String"
					},
					"Foldername": {
						"type": "String",
						"defaultValue": "INT_303_poRecInv"
					},
					"OraErrorPath": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/error"
					},
					"SSISStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_303_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_303_PART_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_303_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send Success ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_SCM_303_INVOICEALL  where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Send Success ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Success ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Success ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Success ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Success ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Success ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_303_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Fusion_FlatFileShare",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"fileLocation": {
													"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@last(split(pipeline().parameters.filePath,'/'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ORACLE Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ORACLE processed file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ORACLE Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of loading ORACLE Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "inbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/inbound/scm/INT_303_poRecInv",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Send Failed ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_SCM_303_INVOICEALL  where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Failed ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Failed ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Failed ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Failed ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Failed ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Failed ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Error File to ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/approvedcop/fileprocessed\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Send Error File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/log/scm/INT_303_poRecInv"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_303"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_303"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_303_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:06:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Send Success ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_SCM_303_INVOICEALL  where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Send Success ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Success ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Success ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Success ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Success ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Success ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Success Status Update",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_303_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": "-",
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Fusion_FlatFileShare",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"fileLocation": {
													"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@last(split(pipeline().parameters.filePath,'/'))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ORACLE Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ORACLE processed file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "inbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/inbound/scm/INT_303_poRecInv",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Send Failed ACK",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup BU",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup BU",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select business_unit BU from INT_SCM_303_INVOICEALL  where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Add Log for Failed ACK",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Send Failed ACK",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "API_LOG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"EventID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"EventName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"FileZipName": {
												"value": "@pipeline().parameters.fileName",
												"type": "Expression"
											},
											"Object": "PO",
											"SourceSystem": "ROSS-Azure",
											"DestSystem": "Edgenta-Azure",
											"JobID": {
												"value": "@activity('Send Failed ACK').ActivityRunId",
												"type": "Expression"
											},
											"ActivityTask": {
												"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
												"type": "Expression"
											},
											"StartTime": {
												"value": "@activity('Send Failed ACK').ExecutionStartTime",
												"type": "Expression"
											},
											"EndTime": {
												"value": "@activity('Send Failed ACK').ExecutionEndTime",
												"type": "Expression"
											},
											"Status": {
												"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
												"type": "Expression"
											},
											"Output": {
												"value": "@activity('Send Failed ACK').output",
												"type": "Expression"
											},
											"Error": {
												"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
												"type": "Expression"
											},
											"EventType": "INBOUND",
											"FilePath": "The step describes the process of send the success message of received file via API of source system",
											"Input": {
												"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_SCM_303\",\n\"Filename\":\"',pipeline().parameters.fileName,'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Send Error File to ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/sftp/ross",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/approvedcop/fileprocessed\"}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Send Error File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Send Error File to ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Load Processed File",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:06:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[INSERT_INT_SCM_303_LOAD]",
										"storedProcedureParameters": {
											"failedrow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"Filepath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"SuccessRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ZipName": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "edsaasdrdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.06:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"customer\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Load Processed File').Status,'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem/dev/edgenta/azure/log/scm/INT_303_poRecInv"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_303"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_303_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCM_231_PART_4_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Pipeline ID",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
									"type": "Expression"
								}
							},
							"dataset": {
								"referenceName": "LOG_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set PipelineID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Pipeline ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "LookupPipelineID",
							"value": {
								"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Status Success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set PipelineID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Success Status Update",
									"type": "ExecuteSSISPackage",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_231_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": "-"
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "WebActivity1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Success Status Update",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Load Processed File",
									"type": "ExecuteSSISPackage",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"packageLocation": {
											"packagePath": "edsaasdrssis/UEMEd_INTEGRATION_SCM/SCM_231_Load.dtsx",
											"type": "SSISDB"
										},
										"environmentPath": null,
										"connectVia": {
											"referenceName": "egsaasdrir",
											"type": "IntegrationRuntimeReference"
										},
										"loggingLevel": "Basic",
										"packageParameters": {
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												}
											},
											"failedRow": {
												"value": {
													"value": "@pipeline().parameters.failedRow",
													"type": "Expression"
												}
											},
											"filePath": {
												"value": {
													"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
													"type": "Expression"
												}
											},
											"pipelineID": {
												"value": {
													"value": "@variables('LookupPipelineID')",
													"type": "Expression"
												}
											},
											"successRow": {
												"value": {
													"value": "@pipeline().parameters.successRow",
													"type": "Expression"
												}
											},
											"totalRow": {
												"value": {
													"value": "@pipeline().parameters.totalRow",
													"type": "Expression"
												}
											},
											"zipname": {
												"value": {
													"value": "@pipeline().parameters.fileName",
													"type": "Expression"
												}
											}
										},
										"projectConnectionManagers": {},
										"packageConnectionManagers": {}
									}
								},
								{
									"name": "Get Data from ROSS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": true
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ROSSFileShare",
											"type": "DatasetReference",
											"parameters": {
												"FileLocation": {
													"value": "@variables('fileProcessedFolderRoss')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "FILE_FUSION",
											"type": "DatasetReference",
											"parameters": {
												"InterfaceFolder": {
													"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
													"type": "Expression"
												},
												"FileName": {
													"value": "@variables('fileProcessedFileRoss')",
													"type": "Expression"
												},
												"PathFolder": {
													"value": "@variables('fileProcessedFolderAzure')",
													"type": "Expression"
												},
												"Department": {
													"value": "@variables('Department')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileProcessedFileRoss",
										"value": {
											"value": "@replace(pipeline().parameters.filePath,concat(variables('fileProcessedFolderRoss'),'/'),'')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for Get Data from ROSS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Data from ROSS",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add Log for ROSS Processed File",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://edgenta.azure-api.net/adf/AuditLog",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"inventoryitemcost\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Backup File",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Failed Validation",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "GENERAL_FILE_BACKUP",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"InterfaceName": {
												"value": "@variables('InterfaceFolder')",
												"type": "Expression"
											},
											"ParentPipelineID": {
												"value": "@variables('LookupPipelineID')",
												"type": "Expression"
											},
											"SourceFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"DestinationFolder": {
												"value": "@variables('fileProcessedFolderAzure')",
												"type": "Expression"
											},
											"LogFolder": "outbound/log",
											"SourceArchiveFolder": "uem/dev/edgenta/azure/outbound/archive/source",
											"Department": {
												"value": "@variables('Department')",
												"type": "Expression"
											},
											"DestinationArchiveFolder": {
												"value": "@variables('DestinationArchiveFolder')",
												"type": "Expression"
											},
											"StagingFolder": "uem/dev/edgenta/azure/outbound/main/source",
											"FileName": {
												"value": "@variables('fileProcessedFileRoss')",
												"type": "Expression"
											},
											"FileLocation": "/uem/dev/edgenta/azure/outbound/scm/inventoryitemcost",
											"ScheduleType": "1",
											"SourceSystem": {
												"value": "@variables('SourceSystem')",
												"type": "Expression"
											},
											"DestinationSystem": "Azure"
										}
									}
								},
								{
									"name": "Lookup Failed Validation",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Processed File",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''3''')",
												"type": "Expression"
											}
										},
										"dataset": {
											"referenceName": "LOG_TABLE",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filePath": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"totalRow": {
						"type": "int"
					},
					"successRow": {
						"type": "int"
					},
					"failedRow": {
						"type": "int"
					},
					"fileName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					}
				},
				"variables": {
					"fileProcessedFolderRoss": {
						"type": "String",
						"defaultValue": "/uem_edgenta/dev/erp/ross/fusion_outbound/inventoryitemcost/fileprocessed"
					},
					"fileProcessedFileRoss": {
						"type": "String"
					},
					"fileProcessedFolderAzure": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/main/destination/ross"
					},
					"Department": {
						"type": "String",
						"defaultValue": "scm"
					},
					"InterfaceFolder": {
						"type": "String",
						"defaultValue": "INT_SCM_231"
					},
					"DestinationArchiveFolder": {
						"type": "String",
						"defaultValue": "uem/dev/edgenta/azure/outbound/archive/destination/ross"
					},
					"SourceSystem": {
						"type": "String",
						"defaultValue": "ROSS"
					},
					"LookupPipelineID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "INT_SCM_231_SP"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}