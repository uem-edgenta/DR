{
	"name": "PPM_363_PART_1_SP",
	"properties": {
		"activities": [
			{
				"name": "Get File",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set Variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true
						}
					},
					"sink": {
						"type": "BlobSink",
						"copyBehavior": "PreserveHierarchy"
					},
					"enableStaging": false,
					"parallelCopies": 4,
					"dataIntegrationUnits": 32
				},
				"inputs": [
					{
						"referenceName": "AzureBLOBSFTPFileDef",
						"type": "DatasetReference",
						"parameters": {
							"FileLocation": {
								"value": "@pipeline().parameters.FileLocation",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "FOLDER_FUSION",
						"type": "DatasetReference",
						"parameters": {
							"InterfaceFolder": {
								"value": "@pipeline().parameters.InterfaceName",
								"type": "Expression"
							},
							"FolderName": "-1",
							"PathFolder": {
								"value": "@pipeline().parameters.StagingFolder",
								"type": "Expression"
							},
							"Department": {
								"value": "@pipeline().parameters.Department",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Add Log for Get File",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get File",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://edgenta.azure-api.net/adf/AuditLog",
					"method": "POST",
					"body": {
						"value": "@concat('\n{\"EventID\" : \"',pipeline().RunId,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',replace(pipeline().parameters.FileName,'IMPORT','Import'),'\",\n\"FileName\" : \"',replace(replace(pipeline().parameters.FileName,'IMPORT','Import'),'zip','csv'),'\",\n\"Object\" : \"COSTACCRUAL\",\n\"SourceSystem\" : \"ROSS-Azure\",\n\"DestSystem\" : \"Edgenta-Azure\",\n\"JobId\" : \"',activity('Get File').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ',pipeline().parameters.SourceSystem,' File\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Get File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get File').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get File').Status,'\",\n\"Output\" : ',activity('Get File').Output,',\n\"Error\" : ',activity('Get File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the .csv file from ',pipeline().parameters.SourceSystem,'SFTP. Deflating process will be run once retrieved the .csv and move .csv to BLOB\",\n\"TotalRow\" : ',pipeline().parameters.ScheduleType,',\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set Variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "ZipFileName",
					"value": {
						"value": "@pipeline().parameters.FileName",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Backup Source File Complete",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Checksum is match",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "GENERAL_SOURCE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"InterfaceName": {
							"value": "@pipeline().parameters.InterfaceName",
							"type": "Expression"
						},
						"ParentPipelineID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"SourceFolder": {
							"value": "@pipeline().parameters.SourceFolder",
							"type": "Expression"
						},
						"DestinationFolder": {
							"value": "@pipeline().parameters.DestinationFolder",
							"type": "Expression"
						},
						"LogFolder": {
							"value": "@pipeline().parameters.LogFolder",
							"type": "Expression"
						},
						"SourceArchiveFolder": {
							"value": "@pipeline().parameters.SourceArchiveFolder",
							"type": "Expression"
						},
						"Department": {
							"value": "@pipeline().parameters.Department",
							"type": "Expression"
						},
						"DestinationArchiveFolder": {
							"value": "@pipeline().parameters.DestinationArchiveFolder",
							"type": "Expression"
						},
						"StagingFolder": {
							"value": "@pipeline().parameters.StagingFolder",
							"type": "Expression"
						},
						"FileName": {
							"value": "@pipeline().parameters.FileName",
							"type": "Expression"
						},
						"FileLocation": {
							"value": "@pipeline().parameters.FileLocation",
							"type": "Expression"
						},
						"ScheduleType": {
							"value": "@pipeline().parameters.ScheduleType",
							"type": "Expression"
						},
						"SourceSystem": {
							"value": "@pipeline().parameters.SourceSystem",
							"type": "Expression"
						},
						"DestinationSystem": {
							"value": "@pipeline().parameters.DestinationSystem",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Backup Source File Skipped",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Checksum is match",
						"dependencyConditions": [
							"Skipped"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "GENERAL_SOURCE_BACKUP",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"InterfaceName": {
							"value": "@pipeline().parameters.InterfaceName",
							"type": "Expression"
						},
						"ParentPipelineID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"SourceFolder": {
							"value": "@pipeline().parameters.SourceFolder",
							"type": "Expression"
						},
						"DestinationFolder": {
							"value": "@pipeline().parameters.DestinationFolder",
							"type": "Expression"
						},
						"LogFolder": {
							"value": "@pipeline().parameters.LogFolder",
							"type": "Expression"
						},
						"SourceArchiveFolder": {
							"value": "@pipeline().parameters.SourceArchiveFolder",
							"type": "Expression"
						},
						"Department": {
							"value": "@pipeline().parameters.Department",
							"type": "Expression"
						},
						"DestinationArchiveFolder": {
							"value": "@pipeline().parameters.DestinationArchiveFolder",
							"type": "Expression"
						},
						"StagingFolder": {
							"value": "@pipeline().parameters.StagingFolder",
							"type": "Expression"
						},
						"FileName": {
							"value": "@pipeline().parameters.FileName",
							"type": "Expression"
						},
						"FileLocation": {
							"value": "@pipeline().parameters.FileLocation",
							"type": "Expression"
						},
						"ScheduleType": {
							"value": "@pipeline().parameters.ScheduleType",
							"type": "Expression"
						},
						"SourceSystem": {
							"value": "@pipeline().parameters.SourceSystem",
							"type": "Expression"
						},
						"DestinationSystem": {
							"value": "@pipeline().parameters.DestinationSystem",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Check Checksum",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://edsaasdrfc01.azurewebsites.net/api/ValidChecksum",
					"method": "POST",
					"body": {
						"value": "@concat('{\"cksmPath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',variables('ZipFileName'),'/Checksum.txt\",\n\"filePath\":\"egsaasdrblob01/',pipeline().parameters.StagingFolder,'/',pipeline().parameters.Department,'/',pipeline().parameters.InterfaceName,'/',variables('ZipFileName'),'/',tolower(replace(variables('ZipFileName'),'zip','csv')),'\"}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Send ACK",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Check Checksum",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
					"method": "POST",
					"body": {
						"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.FileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"Checksum is not matched\"\n}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Add Log for Check Checksum",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Check Checksum",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://edgenta.azure-api.net/adf/AuditLog",
					"method": "POST",
					"body": {
						"value": "@concat('\n{\"EventID\" : \"',pipeline().RunId,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"Customer\",\n\"SourceSystem\" : \"ROSS-Azure\",\n\"DestSystem\" : \"Edgenta-Azure\",\n\"JobId\" : \"',activity('Check Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Check Checksum\",\n\"ActivityType\" : \"',pipeline().parameters.ParentPipelineID,'\",\n\"StartTime\" : \"',activity('Check Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Check Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Check Checksum').Status,'\",\n\"Output\" : ',activity('Check Checksum').Output,',\n\"Error\" : ',activity('Check Checksum').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of check and validate the Checksum file provided by source system in .ZIP file\",\n\"TotalRow\" : ',pipeline().parameters.ScheduleType,',\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Checksum is match",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check Checksum",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Check Checksum').output.Response,'true')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Send Failed ACK",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup ACK Data Failed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:06:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAck",
								"method": "POST",
								"body": {
									"value": "@concat(\n'{\"sourceSystem\":\" ',activity('Lookup ACK Data Failed').output.firstRow.source,\n'\",\"zipfileName\":\"',variables('ZipFileName')\n,'\",\"dataFileName\":\"',replace(variables('ZipFileName'),'zip','csv')\n,'\",\"errorLocation\":\"',activity('Lookup ACK Data Failed').output.firstRow.ErrorLocation\n,'\",\"businessObject\":\"',activity('Lookup ACK Data Failed').output.firstRow.BusinessObject\n,'\",\"notificationType\":\"',activity('Lookup ACK Data Failed').output.firstRow.NotificationType\n,'\",\"eventOccurredTime\":\"',string(activity('Lookup ACK Data Failed').output.firstRow.starttime)\n,'\",\"messageDescription\":\"',activity('Lookup ACK Data Failed').output.firstRow.ErrorMessage\n,'\",\"fileLine\":\"\"}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "WebActivity6",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Send Failed ACK",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:06:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',pipeline().RunId,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"ROSS-Azure\",\n\"DestSystem\" : \"Edgenta-Azure\",\n\"JobId\" : \"',activity('Send Failed ACK').ActivityRunId,'\",\n\"ActivityTask\" : \"Send ACK\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Send Failed ACK').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Failed ACK').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Failed ACK').Status,'\",\n\"Output\" : ',activity('Send Failed ACK').Output,',\n\"Error\" : \"',if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error)),'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 2,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Add Log for Checksum Not Valid",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:06:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edsaasdrfc01.azurewebsites.net/api/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',pipeline().RunId,'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"',variables('ZipFileName'),'\",\n\"FileName\" : \"',replace(variables('ZipFileName'),'zip','csv'),'\",\n\"Object\" : \"BlanketAggreement\",\n\"SourceSystem\" : \"ROSS-Azure\",\n\"DestSystem\" : \"Edgenta-Azure\",\n\"JobId\" : \"',activity('Check Checksum').ActivityRunId,'\",\n\"ActivityTask\" : \"Check Checksum\",\n\"ActivityType\" : \"\",\n\"StartTime\" : \"',activity('Check Checksum').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Check Checksum').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Check Checksum').Status,'\",\n\"Output\" : ',activity('Check Checksum').Output,',\n\"Error\" : \"',activity('Check Checksum').Error,'\",\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup ACK Data Failed",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Add Log for Checksum Not Valid",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:06:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select etl.starttime,source,FileNameZip,FileNameData,el.BusinessObject,CASE WHEN etl.Status = 1 THEN ''ACK'' ELSE ''ERROR'' END NotificationType,etl.ErrorMessage,'''' FileLine,\nCASE WHEN etl.Status = 1 THEN '''' ELSE ''/uem/dev/edgenta/azure/outbound/log/''+replace(el.FileNameZip,''.zip'','''')+''_Error_Log.zip'' END ErrorLocation\n from eventlog el inner join eventtasklog etl on el.EventID = etl.EventID\nwhere el.eventid = ''',pipeline().parameters.ParentPipelineID,''' and etl.StepName=''Check Checksum''')",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "LOG_TABLE",
									"type": "DatasetReference"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "ExecutePipeline3",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PPM_363_PART_2_SP",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"InterfaceName": {
										"value": "@pipeline().parameters.InterfaceName",
										"type": "Expression"
									},
									"ID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"ZipFileName": {
										"value": "@variables('ZipFileName')",
										"type": "Expression"
									},
									"ParentPipelineID": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"SourceFolder": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									},
									"DestinationFolder": {
										"value": "@pipeline().parameters.DestinationFolder",
										"type": "Expression"
									},
									"StagingFolder": {
										"value": "@pipeline().parameters.StagingFolder",
										"type": "Expression"
									},
									"LogFolder": {
										"value": "@pipeline().parameters.LogFolder",
										"type": "Expression"
									},
									"SourceArchiveFolder": {
										"value": "@pipeline().parameters.SourceArchiveFolder",
										"type": "Expression"
									},
									"DestinationArchiveFolder": {
										"value": "@pipeline().parameters.DestinationArchiveFolder",
										"type": "Expression"
									},
									"Department": {
										"value": "@pipeline().parameters.Department",
										"type": "Expression"
									},
									"SourceSystem": {
										"value": "@pipeline().parameters.SourceSystem",
										"type": "Expression"
									},
									"DestinationSystem": {
										"value": "@pipeline().parameters.DestinationSystem",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Add Log",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Send ACK",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "API_LOG",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EventID": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"EventName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"FileZipName": {
							"value": "@variables('ZipFileName')",
							"type": "Expression"
						},
						"Object": "BLANKETAGREEMENT",
						"SourceSystem": "Edgenta-Azure",
						"DestSystem": "ROSS-Azure",
						"JobID": {
							"value": "@activity('Send ACK').ActivityRunId",
							"type": "Expression"
						},
						"ActivityTask": "Send Failed Received File ACK",
						"StartTime": {
							"value": "@activity('Send ACK').ExecutionStartTime",
							"type": "Expression"
						},
						"EndTime": {
							"value": "@activity('Send ACK').ExecutionEndTime",
							"type": "Expression"
						},
						"Status": {
							"value": "@activity('Send ACK').Status",
							"type": "Expression"
						},
						"Output": {
							"value": "@activity('Send ACK').output",
							"type": "Expression"
						},
						"Error": {
							"value": "@if(empty(activity('Send ACK').Error),'',string(activity('Send ACK').Error))",
							"type": "Expression"
						},
						"EventType": "OUTBOUND",
						"FilePath": "The step describes the process of send the success message of received file via API of source system",
						"Input": {
							"value": "@concat('{\n\"Business_Unit\":\"\",\n\"Interface_ID\":\"',pipeline().parameters.InterfaceName,'\",\n\"Filename\":\"',pipeline().parameters.FileName,'\",\n\"Description\":\"ACK File Received\",\n\"Run_Date\":\"',formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"Checksum is not matched\"\n}')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Delete1",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Backup Source File Complete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureBLOBSFTPFile",
						"type": "DatasetReference",
						"parameters": {
							"FileLocation": {
								"value": "@pipeline().parameters.FileLocation",
								"type": "Expression"
							},
							"FileName": {
								"value": "@variables('ZipFileName')",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "Delete2",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Backup Source File Skipped",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:06:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "AzureBLOBSFTPFile",
						"type": "DatasetReference",
						"parameters": {
							"FileLocation": {
								"value": "@pipeline().parameters.FileLocation",
								"type": "Expression"
							},
							"FileName": {
								"value": "@pipeline().parameters.FileName",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					}
				}
			}
		],
		"parameters": {
			"InterfaceName": {
				"type": "string",
				"defaultValue": "INT_PPM_206"
			},
			"ParentPipelineID": {
				"type": "string"
			},
			"SourceFolder": {
				"type": "string",
				"defaultValue": "uem/dev/edgenta/azure/inbound/main/source"
			},
			"DestinationFolder": {
				"type": "string",
				"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination"
			},
			"LogFolder": {
				"type": "string",
				"defaultValue": "inbound/log"
			},
			"SourceArchiveFolder": {
				"type": "string",
				"defaultValue": "uem/dev/edgenta/azure/inbound/archive/source"
			},
			"Department": {
				"type": "string",
				"defaultValue": "ppm"
			},
			"DestinationArchiveFolder": {
				"type": "string",
				"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination"
			},
			"StagingFolder": {
				"type": "string",
				"defaultValue": "uem/dev/edgenta/azure/inbound/main/source"
			},
			"FileName": {
				"type": "string",
				"defaultValue": "INT_PPM_206_PROJECT_Export_43271_20190515093732.zip"
			},
			"FileLocation": {
				"type": "string",
				"defaultValue": "/uem/dev/edgenta/azure/inbound/ppm/project"
			},
			"ScheduleType": {
				"type": "string",
				"defaultValue": "1"
			},
			"SourceSystem": {
				"type": "string"
			},
			"DestinationSystem": {
				"type": "string"
			}
		},
		"variables": {
			"ZipFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "INT_PPM_363_SP"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}