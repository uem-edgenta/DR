{
	"name": "PPM_363_PART_4_SP",
	"properties": {
		"activities": [
			{
				"name": "Get Pipeline ID",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('Select top 1 EventID from EventLog where FileNameZip = ''',pipeline().parameters.fileName,'''')",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "LOG_TABLE",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set PipelineID",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Pipeline ID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "LookupPipelineID",
					"value": {
						"value": "@activity('Get Pipeline ID').output.firstRow.eventid",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Status Success",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set PipelineID",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(pipeline().parameters.status,'SUCCESS'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "WebActivity1",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Success Status Update",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edgenta.azure-api.net/adf/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Success Status Update').ActivityRunId,'\",\n\"ActivityTask\" : \"Update Azure Main Table Status\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Success Status Update').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Success Status Update').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Success Status Update').Status,'\",\n\"Output\" : ',activity('Success Status Update').Output,',\n\"Error\" : ',activity('Success Status Update').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of update main table status in Azure database.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Send Success ACK",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup BU 2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
								"method": "POST",
								"body": {
									"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup BU 2",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Success Status Update",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "LOG_TABLE",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "ExecutePipeline1",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Send Success ACK",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "API_LOG",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"EventID": {
										"value": "@variables('LookupPipelineID')",
										"type": "Expression"
									},
									"EventName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"FileZipName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"Object": "PO",
									"SourceSystem": "ROSS-Azure",
									"DestSystem": "Edgenta-Azure",
									"JobID": {
										"value": "@activity('Send Success ACK').ActivityRunId",
										"type": "Expression"
									},
									"ActivityTask": {
										"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
										"type": "Expression"
									},
									"StartTime": {
										"value": "@activity('Send Success ACK').ExecutionStartTime",
										"type": "Expression"
									},
									"EndTime": {
										"value": "@activity('Send Success ACK').ExecutionEndTime",
										"type": "Expression"
									},
									"Status": {
										"value": "@if(contains('200,201,202,204',string(activity('Send Success ACK').Output.Status)),'Succeeded','Failed')",
										"type": "Expression"
									},
									"Output": {
										"value": "@activity('Send Success ACK').output",
										"type": "Expression"
									},
									"Error": {
										"value": "@if(empty(activity('Send Success ACK').Error),'',string(activity('Send Success ACK').Error))",
										"type": "Expression"
									},
									"EventType": "INBOUND",
									"FilePath": "The step describes the process of send the success message of received file via API of source system",
									"Input": {
										"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU 2').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"SUCCESS\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"\"\n}')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Success Status Update",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[INSERT_INT_PPM_363_IMPORTCOST_LOAD]",
								"storedProcedureParameters": {
									"failedrow": {
										"value": {
											"value": "@pipeline().parameters.failedRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Filepath": {
										"value": {
											"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipelineID": {
										"value": {
											"value": "@variables('LookupPipelineID')",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": {
											"value": "@pipeline().parameters.status",
											"type": "Expression"
										},
										"type": "String"
									},
									"SuccessRow": {
										"value": {
											"value": "@pipeline().parameters.successRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"totalRow": {
										"value": {
											"value": "@pipeline().parameters.totalRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ZipName": {
										"value": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "edsaasdrdb",
								"type": "LinkedServiceReference"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Get Data from ROSS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set File Name",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "FileSystemSource",
									"recursive": true
								},
								"sink": {
									"type": "BlobSink"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Fusion_FlatFileShare",
									"type": "DatasetReference",
									"parameters": {
										"fileName": "@variables('fileProcessedFileRoss')",
										"fileLocation": {
											"value": "@replace(pipeline().parameters.filePath,concat('/',variables('fileProcessedFileRoss')),'')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "FILE_FUSION",
									"type": "DatasetReference",
									"parameters": {
										"InterfaceFolder": {
											"value": "@concat(variables('InterfaceFolder'),'/processedfile')",
											"type": "Expression"
										},
										"FileName": {
											"value": "@variables('fileProcessedFileRoss')",
											"type": "Expression"
										},
										"PathFolder": {
											"value": "@variables('fileProcessedFolderAzure')",
											"type": "Expression"
										},
										"Department": {
											"value": "@variables('Department')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Set File Name",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "fileProcessedFileRoss",
								"value": {
									"value": "@last(split(pipeline().parameters.filePath,'/'))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Add Log for Get Data from ROSS",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Get Data from ROSS",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edgenta.azure-api.net/adf/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Get Data from ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Get ROSS Processed Data\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Get Data from ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Get Data from ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Get Data from ROSS').Status,'\",\n\"Output\" : ',activity('Get Data from ROSS').Output,',\n\"Error\" : ',activity('Get Data from ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of locate and retrieve the ROSS validation file from SFTP.\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Add Log for ROSS Processed File",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup Failed Validation",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edgenta.azure-api.net/adf/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"Azure-ROSS\",\n\"JobId\" : \"',activity('Load Processed File').ActivityRunId,'\",\n\"ActivityTask\" : \"Load ROSS Processed File\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Load Processed File').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Load Processed File').ExecutionEndTime,'\",\n\"Status\" : \"',if(equals(activity('Lookup Failed Validation').output.firstRow.Status,'1'),'Succeeded','Failed'),'\",\n\"Output\" : ',activity('Load Processed File').Output,',\n\"Error\" : ',activity('Load Processed File').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"OUTBOUND\",\n\"FilePath\" : \"The step describes the process of loading ROSS Processed File to Azure database. This step include data validation and data loading\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Backup File",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Lookup Failed Validation",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "GENERAL_FILE_BACKUP",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"InterfaceName": {
										"value": "@variables('InterfaceFolder')",
										"type": "Expression"
									},
									"ParentPipelineID": {
										"value": "@variables('LookupPipelineID')",
										"type": "Expression"
									},
									"SourceFolder": "uem/dev/edgenta/azure/inbound/main/source",
									"DestinationFolder": {
										"value": "@variables('fileProcessedFolderAzure')",
										"type": "Expression"
									},
									"LogFolder": "inbound/log",
									"SourceArchiveFolder": "uem/dev/edgenta/azure/inbound/archive/source",
									"Department": {
										"value": "@variables('Department')",
										"type": "Expression"
									},
									"DestinationArchiveFolder": {
										"value": "@variables('DestinationArchiveFolder')",
										"type": "Expression"
									},
									"StagingFolder": "uem/dev/edgenta/azure/inbound/main/source",
									"FileName": {
										"value": "@variables('fileProcessedFileRoss')",
										"type": "Expression"
									},
									"FileLocation": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual",
									"ScheduleType": "1",
									"SourceSystem": {
										"value": "@variables('SourceSystem')",
										"type": "Expression"
									},
									"DestinationSystem": "Azure"
								}
							}
						},
						{
							"name": "Lookup Failed Validation",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Load Processed File",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select status from etlaudit where eventid = ''',variables('LookupPipelineID'),''' and packagetype = ''6''')",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "LOG_TABLE",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Send Failed ACK",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Lookup BU",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edsaasdrfc01.azurewebsites.net/api/PostAckROSS",
								"method": "POST",
								"body": {
									"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Lookup BU",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Send Error File to ROSS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select business_unit BU from INT_PPM_363_IMPORTCOST where PIPELINE_ID = ''',variables('LookupPipelineID'),'''')",
										"type": "Expression"
									}
								},
								"dataset": {
									"referenceName": "LOG_TABLE",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Add Log for Failed ACK",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Send Failed ACK",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "API_LOG",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"EventID": {
										"value": "@variables('LookupPipelineID')",
										"type": "Expression"
									},
									"EventName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"FileZipName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"Object": "PO",
									"SourceSystem": "ROSS-Azure",
									"DestSystem": "Edgenta-Azure",
									"JobID": {
										"value": "@activity('Send Failed ACK').ActivityRunId",
										"type": "Expression"
									},
									"ActivityTask": {
										"value": "@concat('Send File Processed ',variables('SourceSystem'),' ACK')",
										"type": "Expression"
									},
									"StartTime": {
										"value": "@activity('Send Failed ACK').ExecutionStartTime",
										"type": "Expression"
									},
									"EndTime": {
										"value": "@activity('Send Failed ACK').ExecutionEndTime",
										"type": "Expression"
									},
									"Status": {
										"value": "@if(contains('200,201,202,204',string(activity('Send Failed ACK').Output.Status)),'Succeeded','Failed')",
										"type": "Expression"
									},
									"Output": {
										"value": "@activity('Send Failed ACK').output",
										"type": "Expression"
									},
									"Error": {
										"value": "@if(empty(activity('Send Failed ACK').Error),'',string(activity('Send Failed ACK').Error))",
										"type": "Expression"
									},
									"EventType": "INBOUND",
									"FilePath": "The step describes the process of send the success message of received file via API of source system",
									"Input": {
										"value": "@concat('{\n\"Business_Unit\":\"',activity('Lookup BU').output.firstRow.BU,'\",\n\"Interface_ID\":\"INT_PPM_363\",\n\"Filename\":\"',concat(toupper(replace(pipeline().parameters.fileName,'.zip','')),'.zip'),'\",\n\"Description\":\"ACK File Processed\",\n\"Run_Date\":\"',formatDateTime(addhours(utcnow(),8),'yyyy-MM-dd hh:mm:ss'),'\",\n\"Status\":\"FAIL\",\n\"Error_Message\":\"\",\n\"Error_Filename\":\"',variables('fileProcessedFileRoss'),'\"\n}')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Send Error File to ROSS",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Load Processed File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edgenta.azure-api.net/adf/sftp/ross",
								"method": "POST",
								"body": {
									"value": "@concat('{\"blobPath\":\"/egsaasdrblob01/',concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss')),'\",\"fileName\":\"',variables('fileProcessedFileRoss'),'\",\"sftpTarget\":\"/uem_edgenta/dev/erp/ross/fusion_inbound/costaccrual/fileprocessed\"}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Add Log for Send Error File",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Send Error File to ROSS",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://edgenta.azure-api.net/adf/AuditLog",
								"method": "POST",
								"body": {
									"value": "@concat('\n{\"EventID\" : \"',variables('LookupPipelineID'),'\",\n\"EventName\" : \"',pipeline().Pipeline,'\",\n\"FileZipName\" : \"\",\n\"FileName\" : \"',variables('fileProcessedFileRoss'),'\",\n\"Object\" : \"costaccrual\",\n\"SourceSystem\" : \"Azure-Edgenta\",\n\"DestSystem\" : \"UEMGroup-Oracle\",\n\"JobId\" : \"',activity('Send Error File to ROSS').ActivityRunId,'\",\n\"ActivityTask\" : \"Send Error File to ROSS\",\n\"ActivityType\" : \"',pipeline().parameters.pipelineID,'\",\n\"StartTime\" : \"',activity('Send Error File to ROSS').ExecutionStartTime,'\",\n\"EndTime\" : \"',activity('Send Error File to ROSS').ExecutionEndTime,'\",\n\"Status\" : \"',activity('Send Error File to ROSS').Status,'\",\n\"Output\" : ',activity('Send Error File to ROSS').Output,',\n\"Error\" : ',activity('Send Error File to ROSS').Error,',\n\"ErrorLoc\" : \"\",\n\"Type\" : 0,\n\"EventType\" : \"INBOUND\",\n\"FilePath\" : \"The step describes the process of sending ORACLE Processed File to Azure SFTP for ROSS\",\n\"TotalRow\" : 0,\n\"SuccessRow\" : 0,\n\"FailedRow\" : 0}')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Load Processed File",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get Data from ROSS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[INSERT_INT_PPM_363_IMPORTCOST_LOAD]",
								"storedProcedureParameters": {
									"failedrow": {
										"value": {
											"value": "@pipeline().parameters.failedRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Filepath": {
										"value": {
											"value": "@concat(variables('fileProcessedFolderAzure'),'/',variables('Department'),'/',variables('InterfaceFolder'),'/processedfile/',variables('fileProcessedFileRoss'))",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipelineID": {
										"value": {
											"value": "@variables('LookupPipelineID')",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": {
											"value": "@pipeline().parameters.status",
											"type": "Expression"
										},
										"type": "String"
									},
									"SuccessRow": {
										"value": {
											"value": "@pipeline().parameters.successRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"totalRow": {
										"value": {
											"value": "@pipeline().parameters.totalRow",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ZipName": {
										"value": {
											"value": "@pipeline().parameters.fileName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "edsaasdrdb",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"filePath": {
				"type": "string"
			},
			"pipelineID": {
				"type": "string"
			},
			"totalRow": {
				"type": "int"
			},
			"successRow": {
				"type": "int"
			},
			"failedRow": {
				"type": "int"
			},
			"fileName": {
				"type": "string"
			},
			"status": {
				"type": "string"
			}
		},
		"variables": {
			"fileProcessedFolderRoss": {
				"type": "String",
				"defaultValue": "/uem/dev/edgenta/azure/inbound/ppm/costaccrual/fileprocessed"
			},
			"fileProcessedFileRoss": {
				"type": "String"
			},
			"fileProcessedFolderAzure": {
				"type": "String",
				"defaultValue": "uem/dev/edgenta/azure/inbound/main/destination/ross"
			},
			"Department": {
				"type": "String",
				"defaultValue": "ppm"
			},
			"InterfaceFolder": {
				"type": "String",
				"defaultValue": "INT_PPM_363"
			},
			"DestinationArchiveFolder": {
				"type": "String",
				"defaultValue": "uem/dev/edgenta/azure/inbound/archive/destination/ross"
			},
			"SourceSystem": {
				"type": "String",
				"defaultValue": "ROSS"
			},
			"LookupPipelineID": {
				"type": "String"
			}
		},
		"folder": {
			"name": "INT_PPM_363_SP"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}